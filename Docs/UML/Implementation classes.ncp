<Project>
  <Name>Design</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Model</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Giocatore</Name>
        <Access>Public</Access>
        <Location left="2255" top="1652" />
        <Size width="463" height="604" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _nome</Member>
        <Member type="Field">private decimal _capitale</Member>
        <Member type="Field">private readonly string _segnalino</Member>
        <Member type="Field">bool _inPrigione</Member>
        <Member type="Field">bool _attivo</Member>
        <Member type="Field">Casella _posizioneCorrente</Member>
        <Member type="Field">List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">Dictionary&lt;string, int&gt; _terreniPerGruppo</Member>
        <Member type="Field">int _turniInPrigione</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PositionChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; MoneyChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PlayerQuit</Member>
        <Member type="Constructor">public Giocatore(string nome, int capitale, string segnalino, Casella posizioneIniziale)</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public decimal Capitale { get; }</Member>
        <Member type="Property">public string Segnalino { get; }</Member>
        <Member type="Property">public bool InPrigione { get; set; }</Member>
        <Member type="Property">public bool Attivo { get; set; }</Member>
        <Member type="Property">public Casella PosizioneCorrente { get; set; }</Member>
        <Member type="Property">public List&lt;Terreno&gt; Terreni { get; }</Member>
        <Member type="Property">public int TurniInPrigione { get; set; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; TerreniPerGruppo { get; }</Member>
        <Member type="Method">public virtual void IncrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void DecrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void AcquistaTerreno(Terreno terreno)</Member>
        <Member type="Method">public virtual void VendiTerreno(Terreno terreno)</Member>
        <Member type="Method">public bool HaTerreniEdificabili()</Member>
        <Member type="Method">public void Fallisci()</Member>
        <Member type="Method">private void OnPositionChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnMoneyChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnPlayerQuit(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="2705" top="1146" />
        <Size width="284" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Terreno</Name>
        <Access>Public</Access>
        <Location left="2856" top="2341" />
        <Size width="753" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal[] _valoriDiAffitto</Member>
        <Member type="Field">readonly decimal _valore</Member>
        <Member type="Field">readonly decimal _valoreDiVendita</Member>
        <Member type="Field">decimal _affitto</Member>
        <Member type="Field">Giocatore _proprietario</Member>
        <Member type="Field">readonly string _nomeGruppo</Member>
        <Member type="Event">public event EventHandler TerrenoEvent</Member>
        <Member type="Constructor">protected Terreno(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo)</Member>
        <Member type="Property">public decimal [] ValoriDiAffitto { get; }</Member>
        <Member type="Property">public decimal Valore { get; }</Member>
        <Member type="Property">public decimal ValoreDiVendita { get; }</Member>
        <Member type="Property">public decimal Affitto { get; set; }</Member>
        <Member type="Property">public Giocatore Proprietario { get; set; }</Member>
        <Member type="Property">public string NomeGruppo { get; }</Member>
        <Member type="Method">public abstract bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public abstract void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public abstract override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tassa</Name>
        <Access>Public</Access>
        <Location left="3331" top="745" />
        <Size width="488" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Field">decimal _importo</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler TassaEvent</Member>
        <Member type="Constructor">public Tassa(int id, string nome, string tipoCella, decimal importo, Image image)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ParcheggioGratuito</Name>
        <Access>Public</Access>
        <Location left="3331" top="980" />
        <Size width="488" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public ParcheggioGratuito(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Via</Name>
        <Access>Public</Access>
        <Location left="3331" top="1375" />
        <Size width="488" height="197" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal _indennità</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public Via(int id, string nome, string tipoCella, decimal indennità, Image image)</Member>
        <Member type="Property">public decimal Indennità { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Prigione</Name>
        <Access>Public</Access>
        <Location left="3331" top="1165" />
        <Size width="488" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal _cauzione</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public Prigione(int id, string nome, string tipoCella, decimal cauzione, Image image)</Member>
        <Member type="Property">public decimal Cauzione { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VaiInPrigione</Name>
        <Access>Public</Access>
        <Location left="3331" top="547" />
        <Size width="488" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler VaiInPrigioneEvent</Member>
        <Member type="Constructor">public VaiInPrigione(int id, string nome, string tipoCella)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TavolaDaGioco</Name>
        <Access>Public</Access>
        <Location left="1773" top="180" />
        <Size width="430" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Casella [] _caselle</Member>
        <Member type="Field">Carta [] _imprevisti</Member>
        <Member type="Field">Carta [] _probabilità</Member>
        <Member type="Field">int _cimaProbabilità</Member>
        <Member type="Field">int _cimaImprevisti</Member>
        <Member type="Field">readonly Dictionary&lt;string, int&gt; _gruppi</Member>
        <Member type="Constructor">public TavolaDaGioco(Casella [] caselle, Carta [] imprevisti, Carta [] probabilità)</Member>
        <Member type="Property">public Carta [] Imprevisti { get; }</Member>
        <Member type="Property">public Carta [] Probabilità { get; }</Member>
        <Member type="Property">public Casella[] Caselle { get; }</Member>
        <Member type="Property">public int CimaProbabilità { get; }</Member>
        <Member type="Property">public int CimaImprevisti { get; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; Gruppi { get; }</Member>
        <Member type="Method">public virtual Carta GetCartaPerTipo(TipoCarta tipo)</Member>
        <Member type="Method">public void ResetTavolaDaGioco()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Carta</Name>
        <Access>Public</Access>
        <Location left="1001" top="1156" />
        <Size width="296" height="233" />
        <Collapsed>False</Collapsed>
        <Member type="Field">TipoCarta _tipo</Member>
        <Member type="Field">string _istruzioni</Member>
        <Member type="Field">Color _colore</Member>
        <Member type="Constructor">public Carta(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Property">public TipoCarta Tipo { get; }</Member>
        <Member type="Property">public string Istruzioni { get; }</Member>
        <Member type="Property">public Color Colore { get; }</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TerrenoSpeciale</Name>
        <Access>Public</Access>
        <Location left="3282" top="3028" />
        <Size width="885" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public TerrenoSpeciale(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffitto, string nomeGruppo, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public override bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TerrenoNormale</Name>
        <Access>Public</Access>
        <Location left="2262" top="3028" />
        <Size width="983" height="366" />
        <Collapsed>False</Collapsed>
        <Member type="Field">static int _maxEdifici</Member>
        <Member type="Field">readonly decimal _prezzoCostruzioneEdificio</Member>
        <Member type="Field">int _numeroEdifici</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; BuildingChanged</Member>
        <Member type="Constructor">public TerrenoNormale(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo, decimal prezzoCostruzioneEdificio)</Member>
        <Member type="Property">public decimal PrezzoCostruzioneEdificio { get; }</Member>
        <Member type="Property">public int NumeroEdifici { get; }</Member>
        <Member type="Property">public int MaxEdifici { get; }</Member>
        <Member type="Method">public virtual void CostruisciEdificio()</Member>
        <Member type="Method">public virtual void DemolisciEdificio()</Member>
        <Member type="Method">public virtual bool IsEdificabile(int terreniDelGruppo)</Member>
        <Member type="Method">public override void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public override bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public void ResetEdifici()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public void OnBuildingChanged(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>TipoCarta</Name>
        <Access>Public</Access>
        <Location left="1062" top="1474" />
        <Size width="162" height="111" />
        <Collapsed>False</Collapsed>
        <Value>IMPREVISTI</Value>
        <Value>PROBABILITA</Value>
      </Entity>
      <Entity type="Class">
        <Name>Imprevisti</Name>
        <Access>Public</Access>
        <Location left="3331" top="1592" />
        <Size width="488" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler ImprevistiEvent</Member>
        <Member type="Constructor">public Imprevisti(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPaga</Name>
        <Access>Internal</Access>
        <Location left="50" top="583" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importo</Member>
        <Member type="Event">public event EventHandler CartaPagaEvent</Member>
        <Member type="Constructor">public CartaPaga(TipoCarta tipo, string istruzioni, decimal importo)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaRicevi</Name>
        <Access>Internal</Access>
        <Location left="50" top="782" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importo</Member>
        <Member type="Event">public event EventHandler CartaRiceviEvent</Member>
        <Member type="Constructor">public CartaRicevi(TipoCarta tipo, string istruzioni, decimal importo)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPagaPerEdifici</Name>
        <Access>Internal</Access>
        <Location left="50" top="976" />
        <Size width="596" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importoCasa</Member>
        <Member type="Field">private readonly decimal _importoAlbergo</Member>
        <Member type="Event">public event EventHandler CartaPagaPerEdificiEvent</Member>
        <Member type="Constructor">public CartaPagaPerEdifici(TipoCarta tipo, string istruzioni, decimal importoCasa, decimal importoAlbergo)</Member>
        <Member type="Property">public decimal ImportoCasa { get; }</Member>
        <Member type="Property">public decimal ImportoAlbergo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPrigione</Name>
        <Access>Internal</Access>
        <Location left="50" top="1207" />
        <Size width="596" height="132" />
        <Collapsed>False</Collapsed>
        <Member type="Event">public event EventHandler CartaPrigioneEvent</Member>
        <Member type="Constructor">public CartaPrigione(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPagaPesca</Name>
        <Access>Internal</Access>
        <Location left="50" top="1373" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importo</Member>
        <Member type="Event">public event EventHandler CartaPagaPescaEvent</Member>
        <Member type="Constructor">public CartaPagaPesca(TipoCarta tipo, string istruzioni, decimal importo)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaMuoviAvanti</Name>
        <Access>Internal</Access>
        <Location left="50" top="1565" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _destinazione</Member>
        <Member type="Event">public event EventHandler CartaMuoviAvantiEvent</Member>
        <Member type="Constructor">public CartaMuoviAvanti(TipoCarta tipo, string istruzioni, string destinazione)</Member>
        <Member type="Property">public string Destinazione { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaMuoviIndietro</Name>
        <Access>Internal</Access>
        <Location left="50" top="1762" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _destinazione</Member>
        <Member type="Event">public event EventHandler CartaMuoviIndietroEvent</Member>
        <Member type="Constructor">public CartaMuoviIndietro(TipoCarta tipo, string istruzioni, string destinazione)</Member>
        <Member type="Property">public string Destinazione { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Probabilità</Name>
        <Access>Public</Access>
        <Location left="3331" top="1793" />
        <Size width="488" height="180" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler ProbabilitàEvent</Member>
        <Member type="Constructor">public Probabilità(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LogEventArgs</Name>
        <Access>Public</Access>
        <Location left="1859" top="2486" />
        <Size width="224" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _logMessage</Member>
        <Member type="Field">private readonly decimal _value</Member>
        <Member type="Constructor">public LogEventArgs(string logMessage)</Member>
        <Member type="Property">public string LogMessage { get; }</Member>
        <Member type="Property">public decimal Value { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Partita</Name>
        <Access>Public</Access>
        <Location left="1724" top="712" />
        <Size width="518" height="587" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly Giocatore[] _giocatori</Member>
        <Member type="Field">readonly TavolaDaGioco _tavolaDaGioco</Member>
        <Member type="Field">int _giocatoreCorrente</Member>
        <Member type="Field">Random _random</Member>
        <Member type="Field">int _risultatoDado1</Member>
        <Member type="Field">int _risultatoDado2</Member>
        <Member type="Field">int _nDoppi</Member>
        <Member type="Field">Carta _cartaCorrente</Member>
        <Member type="Field">TimeSpan _tempoDaGiocare</Member>
        <Member type="Field">Timer _timerPartita</Member>
        <Member type="Event">public event EventHandler PlayerChanged</Member>
        <Member type="Event">public event EventHandler GameEnded</Member>
        <Member type="Event">public event EventHandler GameTimer</Member>
        <Member type="Constructor">public Partita(Giocatore[] giocatori, TavolaDaGioco tavolaDaGioco, TimeSpan tempoDaGiocare)</Member>
        <Member type="Property">public Giocatore[] Giocatori { get; }</Member>
        <Member type="Property">public TavolaDaGioco TavolaDaGioco { get; }</Member>
        <Member type="Property">public int RisultatoDado1 { get; set; }</Member>
        <Member type="Property">public int RisultatoDado2 { get; set; }</Member>
        <Member type="Property">public int NDoppi { get; set; }</Member>
        <Member type="Property">public int GiocatoreCorrente { get; set; }</Member>
        <Member type="Property">public Carta CartaCorrente { get; set; }</Member>
        <Member type="Property">public TimeSpan TempoDaGiocare { get; }</Member>
        <Member type="Method">public Giocatore GetGiocatoreCorrente()</Member>
        <Member type="Method">public bool TiraDadi()</Member>
        <Member type="Method">public void PassaTurnoProssimoGiocatoreAttivo()</Member>
        <Member type="Method">public void AggiornaAffittoTerreniGiocatore()</Member>
        <Member type="Method">public void AvviaTimer()</Member>
        <Member type="Method">public void ArrestaTimer()</Member>
        <Member type="Method">public List&lt;Statistica&gt; CalcolaStatisctiche()</Member>
        <Member type="Method">public void OnTimerChanged(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>Statistica</Name>
        <Access>Public</Access>
        <Location left="1864" top="1414" />
        <Size width="238" height="221" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public string _nomeGiocatore</Member>
        <Member type="Field">public decimal _capitale</Member>
        <Member type="Field">public int _numeroTerreniPosseduti</Member>
        <Member type="Field">public decimal _valoreComplessivoTerreni</Member>
        <Member type="Field">public int _numeroCasePossedute</Member>
        <Member type="Field">public int _numeroAlberghiPosseduti</Member>
        <Member type="Field">public decimal _valoreComplessivoEdifici</Member>
        <Member type="Field">public decimal _valoreTotale</Member>
      </Entity>
      <Entity type="Class">
        <Name>ShuffleUtility</Name>
        <Access>Public</Access>
        <Location left="2369" top="550" />
        <Size width="257" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static void Shuffle(object[] obj, int max)</Member>
        <Member type="Method">public static void Shuffle(IList obj)</Member>
        <Member type="Method">private static void Swap(IList obj, int i, int r)</Member>
        <Member type="Method">private static void Swap(object[] obj, int i, int r)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2550</X>
          <Y>1621</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>è posizionato</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="2" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3187</X>
          <Y>2277</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3102</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3306</X>
          <Y>832</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3069</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="7" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3295</X>
          <Y>616</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3080</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3298</X>
          <Y>1048</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3077</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3281</X>
          <Y>1255</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3052</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3265</X>
          <Y>1468</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3109</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2423</X>
          <Y>2286</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2661</X>
          <Y>2529</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartRole>-_proprietario</StartRole>
        <StartMultiplicity>0..1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="10" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3173</X>
          <Y>2783</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="11" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2672</X>
          <Y>3003</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3172</X>
          <Y>2783</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="13" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3257</X>
          <Y>1684</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3118</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="14" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>735</X>
          <Y>675</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>835</X>
          <Y>1273</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="15" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>715</X>
          <Y>874</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>855</X>
          <Y>1273</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="16" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>671</X>
          <Y>1087</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>899</X>
          <Y>1273</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="17" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="18" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>671</X>
          <Y>1459</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>899</X>
          <Y>1273</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="19" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>696</X>
          <Y>1659</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>875</X>
          <Y>1273</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="20" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>672</X>
          <Y>1851</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>898</X>
          <Y>1273</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="21" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3296</X>
          <Y>1871</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3078</X>
          <Y>1255</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Nesting" first="23" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="23" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="23" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2373</X>
          <Y>960</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2379</X>
          <Y>1627</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="8" second="25">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2228</X>
          <Y>424</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2500</X>
          <Y>509</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="23" second="25">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2267</X>
          <Y>814</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2495</X>
          <Y>742</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Nesting" first="9" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="8" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1550</X>
          <Y>332</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <EndRole>-_imprevisti, -_probabilità</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="8" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2490</X>
          <Y>330</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <EndRole>-_caselle</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="0" second="22">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1974</X>
          <Y>2461</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="11" second="22">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2140</X>
          <Y>3236</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Gerarchia Caselle</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="954" top="660" />
        <Size width="284" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Probabilità</Name>
        <Access>Public</Access>
        <Location left="100" top="1312" />
        <Size width="482" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler ProbabilitàEvent</Member>
        <Member type="Constructor">public Probabilità(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Imprevisti</Name>
        <Access>Public</Access>
        <Location left="100" top="1111" />
        <Size width="482" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler ImprevistiEvent</Member>
        <Member type="Constructor">public Imprevisti(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TerrenoNormale</Name>
        <Access>Public</Access>
        <Location left="1069" top="1262" />
        <Size width="992" height="366" />
        <Collapsed>False</Collapsed>
        <Member type="Field">static int _maxEdifici</Member>
        <Member type="Field">readonly decimal _prezzoCostruzioneEdificio</Member>
        <Member type="Field">int _numeroEdifici</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; BuildingChanged</Member>
        <Member type="Constructor">public TerrenoNormale(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo, decimal prezzoCostruzioneEdificio)</Member>
        <Member type="Property">public decimal PrezzoCostruzioneEdificio { get; }</Member>
        <Member type="Property">public int NumeroEdifici { get; }</Member>
        <Member type="Property">public int MaxEdifici { get; }</Member>
        <Member type="Method">public virtual void CostruisciEdificio()</Member>
        <Member type="Method">public virtual void DemolisciEdificio()</Member>
        <Member type="Method">public virtual bool IsEdificabile(int terreniDelGruppo)</Member>
        <Member type="Method">public override void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public override bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public void ResetEdifici()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public void OnBuildingChanged(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TerrenoSpeciale</Name>
        <Access>Public</Access>
        <Location left="2106" top="1262" />
        <Size width="879" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public TerrenoSpeciale(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffitto, string nomeGruppo, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public override bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VaiInPrigione</Name>
        <Access>Public</Access>
        <Location left="100" top="66" />
        <Size width="482" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler VaiInPrigioneEvent</Member>
        <Member type="Constructor">public VaiInPrigione(int id, string nome, string tipoCella)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Prigione</Name>
        <Access>Public</Access>
        <Location left="100" top="680" />
        <Size width="482" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal _cauzione</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public Prigione(int id, string nome, string tipoCella, decimal cauzione, Image image)</Member>
        <Member type="Property">public decimal Cauzione { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Via</Name>
        <Access>Public</Access>
        <Location left="100" top="894" />
        <Size width="482" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal _indennità</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public Via(int id, string nome, string tipoCella, decimal indennità, Image image)</Member>
        <Member type="Property">public decimal Indennità { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ParcheggioGratuito</Name>
        <Access>Public</Access>
        <Location left="100" top="499" />
        <Size width="482" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public ParcheggioGratuito(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tassa</Name>
        <Access>Public</Access>
        <Location left="100" top="264" />
        <Size width="482" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Field">decimal _importo</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler TassaEvent</Member>
        <Member type="Constructor">public Tassa(int id, string nome, string tipoCella, decimal importo, Image image)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Terreno</Name>
        <Access>Public</Access>
        <Location left="1680" top="575" />
        <Size width="754" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal[] _valoriDiAffitto</Member>
        <Member type="Field">readonly decimal _valore</Member>
        <Member type="Field">readonly decimal _valoreDiVendita</Member>
        <Member type="Field">decimal _affitto</Member>
        <Member type="Field">Giocatore _proprietario</Member>
        <Member type="Field">readonly string _nomeGruppo</Member>
        <Member type="Event">public event EventHandler TerrenoEvent</Member>
        <Member type="Constructor">protected Terreno(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo)</Member>
        <Member type="Property">public decimal [] ValoriDiAffitto { get; }</Member>
        <Member type="Property">public decimal Valore { get; }</Member>
        <Member type="Property">public decimal ValoreDiVendita { get; }</Member>
        <Member type="Property">public decimal Affitto { get; set; }</Member>
        <Member type="Property">public Giocatore Proprietario { get; set; }</Member>
        <Member type="Property">public string NomeGruppo { get; }</Member>
        <Member type="Method">public abstract bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public abstract void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public abstract override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="3" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1479</X>
          <Y>1237</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1996</X>
          <Y>1017</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1997</X>
          <Y>1017</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>656</X>
          <Y>178</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>880</X>
          <Y>778</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="9" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>715</X>
          <Y>395</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>822</X>
          <Y>778</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="8" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>611</X>
          <Y>596</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>925</X>
          <Y>778</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>610</X>
          <Y>1006</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>927</X>
          <Y>778</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>638</X>
          <Y>1226</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>898</X>
          <Y>778</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>663</X>
          <Y>1426</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>873</X>
          <Y>778</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="10" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>View</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>SpecialPropertyCell</Name>
        <Access>Public</Access>
        <Location left="2119" top="907" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public SpecialPropertyCell(Position position, Size size, Point location, int id, string name, decimal value, string group, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaxCell</Name>
        <Access>Public</Access>
        <Location left="2119" top="1211" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public TaxCell(Position position, Size size, Point location, int id, string name, decimal value, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Cell</Name>
        <Access>Public</Access>
        <Location left="1177" top="51" />
        <Size width="502" height="220" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static decimal _ratio</Member>
        <Member type="Field">protected readonly string _currency</Member>
        <Member type="Constructor">protected Cell(Size size, Point location, int id, string currency)</Member>
        <Member type="Method">protected abstract void DesignDefaultCell()</Member>
        <Member type="Method">protected abstract void Design90RotatedCell()</Member>
        <Member type="Method">protected abstract void Design180RotatedCell()</Member>
        <Member type="Method">protected abstract void Design270RotatedCell()</Member>
        <Member type="Method">public abstract void Resize(int width, int height)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommonPropertyCell</Name>
        <Access>Public</Access>
        <Location left="2119" top="319" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private Panel _colorPanel</Member>
        <Member type="Constructor">public CommonPropertyCell(Position position, Size size, Point location, int id, string name, decimal value, string group, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public void DrawBuilding(int buildingsNum)</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CornerCell</Name>
        <Access>Public</Access>
        <Location left="2119" top="613" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public CornerCell(Size size, Point location, int id, string name, Image image, string currency)</Member>
        <Member type="Constructor">public CornerCell(Size size, Point location, int id, string name, decimal value, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ChanceCell</Name>
        <Access>Public</Access>
        <Location left="2119" top="38" />
        <Size width="808" height="232" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public ChanceCell(Position position, Size size, Point location, int id, string name, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IGameBoard</Name>
        <Access>Public</Access>
        <Location left="302" top="524" />
        <Size width="412" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Property">Point BoardLocation { get; }</Member>
        <Member type="Property">Size BoardSize { get; }</Member>
        <Member type="Property">Control [] Cells { get; }</Member>
        <Member type="Property">Control [] Markers { get; }</Member>
        <Member type="Method">void AddCell(int index, Control cell)</Member>
        <Member type="Method">void RemoveCell(int index, Control cell)</Member>
        <Member type="Method">void PutMarkers(Control marker)</Member>
        <Member type="Method">void PutMarkersOnStartCell(object [] players)</Member>
        <Member type="Method">void RemoveMarker(Control marker)</Member>
        <Member type="Method">void DisposeGameBoard()</Member>
      </Entity>
      <Entity type="Class">
        <Name>GameBoard</Name>
        <Access>Public</Access>
        <Location left="152" top="40" />
        <Size width="657" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Cell [] _cells</Member>
        <Member type="Field">privateDictionary&lt;string, PictureBox&gt; _markers</Member>
        <Member type="Constructor">public GameBoard(Partita partita, Dictionary&lt;string, Image&gt; markers, int cellNum, Point location, Size size, string name)</Member>
        <Member type="Property">public Control [] Cells { get; }</Member>
        <Member type="Property">public Point BoardLocation { get; }</Member>
        <Member type="Property">public Size BoardSize { get; }</Member>
        <Member type="Property">public Control [] Markers { get; }</Member>
        <Member type="Method">public void AddCell(int index, Control cell)</Member>
        <Member type="Method">public void RemoveCell(int index, Control cell)</Member>
        <Member type="Method">public void PutMarkers(Control marker)</Member>
        <Member type="Method">public void PutMarkersOnStartCell(object [] players)</Member>
        <Member type="Method">public void RemoveMarker(Control marker)</Member>
        <Member type="Method">public void DisposeGameBoard()</Member>
        <Member type="Method">private void RefreshPosition(object sender, EventArgs e)</Member>
        <Member type="Method">private void RefreshBuildings(object sender, EventArgs e)</Member>
        <Member type="Method">private void DeleteMarker(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>Position</Name>
        <Access>Public</Access>
        <Location left="1343" top="477" />
        <Size width="162" height="135" />
        <Collapsed>False</Collapsed>
        <Value>BOTTOM</Value>
        <Value>LEFT</Value>
        <Value>TOP</Value>
        <Value>RIGHT</Value>
      </Entity>
      <Entity type="Class">
        <Name>MainView</Name>
        <Access>Public</Access>
        <Location left="208" top="902" />
        <Size width="581" height="485" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Panel _welcomePanel</Member>
        <Member type="Field">private MenuStrip _menuBar</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripMonopoliItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripHelpItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripNewGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripEndGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripExitItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripRulesItem</Member>
        <Member type="Field">private Controller _controller</Member>
        <Member type="Field">private UserPanel _userPanel</Member>
        <Member type="Field">private IGameBoard _gameBoardPanel</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Constructor">public MainView()</Member>
        <Member type="Property">public Panel ActivePanel { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void SetGame(Partita partita, IGameBoard gameBoardPanel, UserPanel userPanel)</Member>
        <Member type="Method">public void EndGame()</Member>
        <Member type="Method">private void ToolStripExitItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripNewGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripEndGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void GameEnded(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripRulesItem_Click(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ControlPanel</Name>
        <Access>Public</Access>
        <Location left="988" top="1004" />
        <Size width="745" height="1114" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button _ritiraDallaPartitaButton</Member>
        <Member type="Field">private Button _pagaCauzioneButton</Member>
        <Member type="Field">private Button _costruisciEdificioButton</Member>
        <Member type="Field">private Button _demolisciEdificioButton</Member>
        <Member type="Field">private Button _vendiTerrenoButton</Member>
        <Member type="Field">private Button _acquistaTerrenoButton</Member>
        <Member type="Field">private Button _pescaUnaCartaButton</Member>
        <Member type="Field">private Button _tiraDadiButton</Member>
        <Member type="Field">private Button _terminaTurnoButton</Member>
        <Member type="Field">private Button _pagaTassaButton</Member>
        <Member type="Field">private Button _pagaAffittoButton</Member>
        <Member type="Field">private Button _pagaButton</Member>
        <Member type="Field">private Button _visualizzaContrattoButton</Member>
        <Member type="Field">private Button _visualizzaInformazioniButton</Member>
        <Member type="Field">private List&lt;Button&gt; _buttons</Member>
        <Member type="Field">private GameController _controller</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private Deed [] _deedPool</Member>
        <Member type="Field">private static DeedInfoDialog _deedInfoDialog</Member>
        <Member type="Field">private static PropertyInfoDialog _propertyInfoDialog</Member>
        <Member type="Constructor">public ControlPanel(Point location, Size size, string name, GameController controller, Partita partita, Deed [] deedPool, string currency)</Member>
        <Member type="Constructor">public ControlPanel(IContainer container)</Member>
        <Member type="Property">public Button TiraDadiButton { get; }</Member>
        <Member type="Property">public Button PagaButton { get; }</Member>
        <Member type="Property">public Button PagaAffittoButton { get; }</Member>
        <Member type="Property">public Button PagaTassaButton { get; }</Member>
        <Member type="Property">public Button PagaCauzioneButton { get; }</Member>
        <Member type="Property">public Button PescaUnaCartaButton { get; }</Member>
        <Member type="Property">public Button TerminaTurnoButton { get; }</Member>
        <Member type="Property">public Button AcquistaTerrenoButton { get; }</Member>
        <Member type="Property">public Button VendiTerrenoButton { get; }</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void RegistraEventiCaselle()</Member>
        <Member type="Method">private void RegistraEventiCarta(Carta carta)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Member type="Method">private void VisualizzaInformazioniButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void RitiraDallaPartitaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaCauzioneButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void CostruisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void DemolisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TiraDadiButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TerminaTurnoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PescaUnaCartaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void AcquistaUnTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void VendiTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaTassaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaAffittoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTassa(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaVaiInPrigione(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTerreno(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaCarta(object sender, EventArgs e)</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaRiceviPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviAvantiPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviIndietroPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPrigionePescata(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserPanel</Name>
        <Access>Public</Access>
        <Location left="208" top="1552" />
        <Size width="549" height="226" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer component</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Field">private GameInfoPanel _gameInfoPanel</Member>
        <Member type="Constructor">public UserPanel(Point location, Size size, ControlPanel controlPanel, GameInfoPanel gameInfoPanel)</Member>
        <Member type="Constructor">public UserPanel(IContainer container)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameInfoPanel</Name>
        <Access>Public</Access>
        <Location left="259" top="1942" />
        <Size width="442" height="434" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label _labelGiocatore</Member>
        <Member type="Field">private Label _labelCapitale</Member>
        <Member type="Field">private Label _labelPosizione</Member>
        <Member type="Field">private Label _labelInPrigione</Member>
        <Member type="Field">private Label _labelTempo</Member>
        <Member type="Field">private TextBox _logBox</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static string _giocatoreCorrente</Member>
        <Member type="Field">private static string _capitaleGiocatoreCorrente</Member>
        <Member type="Field">private static string _posizioneGiocatoreCorrente</Member>
        <Member type="Field">private static int _maxLogLines</Member>
        <Member type="Field">private readonly string _currency</Member>
        <Member type="Constructor">public GameInfoPanel(Point location, Size size, Partita partita, string currency)</Member>
        <Member type="Constructor">public GameInfoPanel(IContainer container)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void AggiornaDatiGiocatoreCorrente(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaLog(LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaTimer(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Deed</Name>
        <Access>Public</Access>
        <Location left="1064" top="2267" />
        <Size width="577" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static Font _valueFont</Member>
        <Member type="Field">private string _deedName</Member>
        <Member type="Field">private readonly int _id</Member>
        <Member type="Field">private decimal _value</Member>
        <Member type="Field">private decimal _sellValue</Member>
        <Member type="Field">private decimal [] _rentValues</Member>
        <Member type="Field">private string _group</Member>
        <Member type="Field">protected readonly string _currency</Member>
        <Member type="Constructor">protected Deed(int id, string name, decimal value, decimal sellValue, decimal [] rentValues, string currency)</Member>
        <Member type="Property">public int ID { get; }</Member>
        <Member type="Property">protected string DeedName { get; }</Member>
        <Member type="Property">protected decimal Value { get; }</Member>
        <Member type="Property">protected decimal SellValue { get; }</Member>
        <Member type="Property">protected decimal [] RentValues { get; }</Member>
        <Member type="Property">protected string Group { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommonPropertyDeed</Name>
        <Access>Public</Access>
        <Location left="466" top="2722" />
        <Size width="869" height="164" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private decimal _houseCost</Member>
        <Member type="Field">private static string _doubleRentInfo</Member>
        <Member type="Constructor">public CommonPropertyDeed(int id, string name, decimal value, decimal sellValue, decimal[] rentValues, string groupColor, decimal houseCost, string currency)</Member>
        <Member type="Property">protected decimal HouseCost { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SpecialPropertyDeed</Name>
        <Access>Public</Access>
        <Location left="1368" top="2722" />
        <Size width="869" height="149" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public SpecialPropertyDeed(int id, string name, decimal value, decimal sellValue, decimal[] rentValues, string groupName, Image image, string currency)</Member>
        <Member type="Property">protected Image Image { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DeedInfoDialog</Name>
        <Access>Public</Access>
        <Location left="2077" top="2039" />
        <Size width="585" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Panel _deedInfoPanel</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _playerName</Member>
        <Member type="Field">private Button _returnButton</Member>
        <Member type="Field">private Deed [] _deeds</Member>
        <Member type="Field">private Dictionary&lt;string, int&gt; _properties</Member>
        <Member type="Constructor">public DeedInfoDialog()</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(String playerName, List&lt;Model.Terreno&gt; terreni, Deed[] deeds)</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PropertyInfoDialog</Name>
        <Access>Public</Access>
        <Location left="2077" top="1630" />
        <Size width="585" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _propertyOwnerLabel</Member>
        <Member type="Field">private Label _propertyDataLabel</Member>
        <Member type="Field">private BUtton _returnButton</Member>
        <Member type="Field">private IEnumerable&lt;Model.Terreno&gt; _terreni</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Constructor">public PropertyInfoDialog(IEnumerable&lt;Model.Terreno&gt; terreni, string currency)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1982</X>
          <Y>1360</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1890</X>
          <Y>162</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="0" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2016</X>
          <Y>1053</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1855</X>
          <Y>162</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1994</X>
          <Y>162</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1874</X>
          <Y>162</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="3" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2068</X>
          <Y>445</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1803</X>
          <Y>161</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1778</X>
          <Y>163</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="7" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="7" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Nesting" first="2" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="9" second="11">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="11" second="12">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="9" second="6">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="11" second="10">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="10" second="17">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="10" second="16">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1767</X>
          <Y>1892</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="10" second="13">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="14" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="15" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="16" second="13">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2374</X>
          <Y>2435</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Gerarchia Cell</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Cell</Name>
        <Access>Public</Access>
        <Location left="90" top="907" />
        <Size width="502" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static decimal _ratio</Member>
        <Member type="Field">protected readonly string _currency</Member>
        <Member type="Constructor">protected Cell(Size size, Point location, int id, string currency)</Member>
        <Member type="Method">public void DrawMarker(PictureBox marker)</Member>
        <Member type="Method">protected abstract void DesignDefaultCell()</Member>
        <Member type="Method">protected abstract void Design90RotatedCell()</Member>
        <Member type="Method">protected abstract void Design180RotatedCell()</Member>
        <Member type="Method">protected abstract void Design270RotatedCell()</Member>
        <Member type="Method">public abstract void Resize(int width, int height)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ChanceCell</Name>
        <Access>Public</Access>
        <Location left="838" top="88" />
        <Size width="808" height="232" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public ChanceCell(Position position, Size size, Point location, int id, string name, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommonPropertyCell</Name>
        <Access>Public</Access>
        <Location left="838" top="342" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private Panel _colorPanel</Member>
        <Member type="Constructor">public CommonPropertyCell(Position position, Size size, Point location, int id, string name, decimal value, string group, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public void DrawBuilding(int buildingsNum)</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CornerCell</Name>
        <Access>Public</Access>
        <Location left="838" top="608" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public CornerCell(Size size, Point location, int id, string name, Image image, string currency)</Member>
        <Member type="Constructor">public CornerCell(Size size, Point location, int id, string name, decimal value, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaxCell</Name>
        <Access>Public</Access>
        <Location left="838" top="1143" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public TaxCell(Position position, Size size, Point location, int id, string name, decimal value, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SpecialPropertyCell</Name>
        <Access>Public</Access>
        <Location left="838" top="877" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public SpecialPropertyCell(Position position, Size size, Point location, int id, string name, decimal value, string group, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DefaultCellsFactory</Name>
        <Access>Public</Access>
        <Location left="102" top="493" />
        <Size width="539" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int _rectCellWidth</Member>
        <Member type="Field">private int _rectCellHeight</Member>
        <Member type="Field">private Size _cellSize</Member>
        <Member type="Field">private readonly Point _location</Member>
        <Member type="Field">private readonly int _gamePanelLength</Member>
        <Member type="Field">private readonly int _cellNum</Member>
        <Member type="Field">private static int _numCorners</Member>
        <Member type="Field">private static decimal _cellRatio</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private Position _side</Member>
        <Member type="Method">public Cell [] CreateViewCells(object [] cells, Size gamePanelSize, string currency)</Member>
        <Member type="Method">protected void CreateViewCell(Casella cell)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICellsFactory</Name>
        <Access>Public</Access>
        <Location left="140" top="270" />
        <Size width="476" height="93" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Cell [] CreateViewCells(object [] cells, Size gamePanelSize, string currency)</Member>
      </Entity>
      <Entity type="Enum">
        <Name>Position</Name>
        <Access>Public</Access>
        <Location left="273" top="1221" />
        <Size width="162" height="135" />
        <Collapsed>False</Collapsed>
        <Value>BOTTOM</Value>
        <Value>LEFT</Value>
        <Value>TOP</Value>
        <Value>RIGHT</Value>
      </Entity>
      <Entity type="Comment">
        <Text>Cell - ICellsFactory</Text>
        <Location left="323" top="98" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>753</X>
          <Y>748</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>673</X>
          <Y>1019</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>739</X>
          <Y>478</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>687</X>
          <Y>1018</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>727</X>
          <Y>211</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>699</X>
          <Y>1018</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>748</X>
          <Y>1018</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>679</X>
          <Y>1019</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>726</X>
          <Y>1292</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>701</X>
          <Y>1018</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="6" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="6" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>357</X>
          <Y>799</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Nesting" first="0" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="6" second="8">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>51</X>
          <Y>634</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>45</X>
          <Y>1290</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Persistence</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IConfigLoader</Name>
        <Access>Public</Access>
        <Location left="445" top="212" />
        <Size width="335" height="248" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Load()</Member>
        <Member type="Method">IEnumerable&lt;object&gt; GetCells()</Member>
        <Member type="Method">IEnumerable&lt;object&gt; GetCards()</Member>
        <Member type="Method">object GetPlayBoard()</Member>
        <Member type="Method">int GetPlayerMinNum()</Member>
        <Member type="Method">int GetPlayerMaxNum()</Member>
        <Member type="Method">int GetNumCells()</Member>
        <Member type="Method">string GetCurrencySymbol()</Member>
        <Member type="Method">Dictonary&lt;int, decimal&gt; GetInitialMoneyValues()</Member>
        <Member type="Method">Dictionary&lt;int, int&gt; GetInitialDeeds()</Member>
        <Member type="Method">Dictionary&lt;string, Image&gt; GetMarkers()</Member>
      </Entity>
      <Entity type="Class">
        <Name>DefaultConfigLoader</Name>
        <Access>Public</Access>
        <Location left="84" top="566" />
        <Size width="1043" height="655" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private List&lt;Casella&gt; _cells</Member>
        <Member type="Field">private List&lt;Carta&gt; _cards</Member>
        <Member type="Field">private TavolaDaGioco _playBoard</Member>
        <Member type="Field">int _callNum</Member>
        <Member type="Field">private Dictionary&lt;int, decimal&gt; _initialMoney</Member>
        <Member type="Field">private Dictionary&lt;int, int&gt; _initialDeeds</Member>
        <Member type="Field">private int _minPlayers</Member>
        <Member type="Field">private int _maxPlayers</Member>
        <Member type="Field">private Dictionary&lt;string, Image&gt; _markers</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private ResourceManager _resources</Member>
        <Member type="Constructor">public DefaultConfigLoader()</Member>
        <Member type="Method">public void Load()</Member>
        <Member type="Method">protected virtual void LoadSettings(XmlDocument document)</Member>
        <Member type="Method">protected virtual void LoadCells(XmlDocument document)</Member>
        <Member type="Method">protected virtual void LoadCards(XmlDocument document)</Member>
        <Member type="Method">protected virtual void LoadCell(XmlNode node)</Member>
        <Member type="Method">protected virtual IEnumerable&lt;object&gt; CellValidArguments(string name, string cellType, decimal value, decimal sellValue, List&lt;decimal&gt; rentValues, string groupName, decimal houseCost, Image image)</Member>
        <Member type="Method">protected virtual void LoadCard(XmlNode node)</Member>
        <Member type="Method">protected virtual IEnumerable&lt;object&gt; CardValidArguments(string instruction, decimal value, decimal houseValue, decimal hotelValue, string destination)</Member>
        <Member type="Method">protected virtual void CreatePlayBoard()</Member>
        <Member type="Method">public IEnumerable&lt;object&gt; GetCells()</Member>
        <Member type="Method">public IEnumerable&lt;object&gt; GetCards()</Member>
        <Member type="Method">public object GetPlayBoard()</Member>
        <Member type="Method">public int GetPlayerMinNum()</Member>
        <Member type="Method">public int GetPlayerMaxNum()</Member>
        <Member type="Method">public int GetNumCells()</Member>
        <Member type="Method">public string GetCurrencySymbol()</Member>
        <Member type="Method">public Dictonary&lt;int, decimal&gt; GetInitialMoneyValues()</Member>
        <Member type="Method">public Dictionary&lt;int, int&gt; GetInitialDeeds()</Member>
        <Member type="Method">public Dictionary&lt;string, Image&gt; GetMarkers()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Carta</Name>
        <Access>Public</Access>
        <Location left="1260" top="882" />
        <Size width="449" height="233" />
        <Collapsed>False</Collapsed>
        <Member type="Field">TipoCarta _tipo</Member>
        <Member type="Field">string _istruzioni</Member>
        <Member type="Field">Color _colore</Member>
        <Member type="Constructor">public Carta(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Property">public TipoCarta Tipo { get; }</Member>
        <Member type="Property">public string Istruzioni { get; }</Member>
        <Member type="Property">public Color Colore { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="1260" top="594" />
        <Size width="449" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TavolaDaGioco</Name>
        <Access>Public</Access>
        <Location left="1260" top="212" />
        <Size width="449" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Casella [] _caselle</Member>
        <Member type="Field">Carta [] _imprevisti</Member>
        <Member type="Field">Carta [] _probabilità</Member>
        <Member type="Field">int _cimaProbabilità</Member>
        <Member type="Field">int _cimaImprevisti</Member>
        <Member type="Field">readonly Dictionary&lt;string, int&gt; _gruppi</Member>
        <Member type="Constructor">public TavolaDaGioco(Casella [] caselle, Carta [] imprevisti, Carta [] probabilità)</Member>
        <Member type="Property">public Carta [] Imprevisti { get; }</Member>
        <Member type="Property">public Carta [] Probabilità { get; }</Member>
        <Member type="Property">public Casella[] Caselle { get; }</Member>
        <Member type="Property">public int CimaProbabilità { get; }</Member>
        <Member type="Property">public int CimaImprevisti { get; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; Gruppi { get; }</Member>
        <Member type="Method">public virtual Carta GetCartaPerTipo(TipoCarta tipo)</Member>
        <Member type="Method">public void ResetTavolaDaGioco()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Persistenza</Text>
        <Location left="160" top="278" />
        <Size width="149" height="87" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="1" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="1" second="3">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1211</X>
          <Y>946</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1224</X>
          <Y>715</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="1" second="4">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1152</X>
          <Y>891</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1198</X>
          <Y>416</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Gerarchia Deed</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Deed</Name>
        <Access>Public</Access>
        <Location left="563" top="280" />
        <Size width="638" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static Font _valueFont</Member>
        <Member type="Field">protected string _name</Member>
        <Member type="Field">protected readonly int _id</Member>
        <Member type="Field">protected decimal _value</Member>
        <Member type="Field">protected decimal _sellValue</Member>
        <Member type="Field">protected string _currencySymbol</Member>
        <Member type="Field">protected decimal [] _rentValues</Member>
        <Member type="Field">string _group</Member>
        <Member type="Constructor">protected Deed(int id, string name, decimal value, decimal sellValue, decimal [] rentValues, string currency, string group)</Member>
        <Member type="Property">public int ID { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommonPropertyDeed</Name>
        <Access>Public</Access>
        <Location left="1440" top="227" />
        <Size width="869" height="148" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private decimal _houseCost</Member>
        <Member type="Field">private static string _doubleRentInfo</Member>
        <Member type="Constructor">public CommonPropertyDeed(int id, string name, decimal value, decimal sellValue, decimal[] rentValues, string groupColor, decimal houseCost, string currency)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SpecialPropertyDeed</Name>
        <Access>Public</Access>
        <Location left="1440" top="427" />
        <Size width="869" height="131" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public SpecialPropertyDeed(int id, string name, decimal value, decimal sellValue, decimal[] rentValues, string groupName, Image image, string currency)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DefaultDeedFactory</Name>
        <Access>Public</Access>
        <Location left="71" top="322" />
        <Size width="375" height="166" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _currency</Member>
        <Member type="Constructor">public DefaultDeedFactory(string currency)</Member>
        <Member type="Method">protected virtual Deed CreateDeed(Casella cell)</Member>
        <Member type="Method">public virtual Deed [] CreateDeeds(object [] properties)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDeedFactory</Name>
        <Access>Public</Access>
        <Location left="103" top="61" />
        <Size width="307" height="98" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Deed [] CreateDeeds(object [] properties)</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="3" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1227</X>
          <Y>403</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1227</X>
          <Y>403</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="3" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Controller</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Controller</Name>
        <Access>Public</Access>
        <Location left="842" top="460" />
        <Size width="507" height="330" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private MainView _mainView</Member>
        <Member type="Field">private ICellsFactory _cellsFactory</Member>
        <Member type="Field">private IConfigLoader _builder</Member>
        <Member type="Field">private IDeedFactory _deedFactory</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private GameController _gameController</Member>
        <Member type="Constructor">public Controller(MainView mainView)</Member>
        <Member type="Method">public void NewGame_ButtonClicked()</Member>
        <Member type="Method">public void EndGame_ButtonClicked()</Member>
        <Member type="Method">private void CreateGame(string[] names, string[] markers, TimeSpan gameTime)</Member>
        <Member type="Method">private Giocatore [] CreatePlayers(string[] names, string[] markers, Casella startCell)</Member>
        <Member type="Method">private void ViewGame(Partita partita, TavolaDaGioco gameBoard, TimeSpan gameTime)</Member>
        <Member type="Method">private void CreateViewCells(IGameBoard boardPanel, TavolaDaGioco gameBoard)</Member>
        <Member type="Method">private void DisplayInitialDeeds(Deed [] deedPool, Partita partita)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameController</Name>
        <Access>Public</Access>
        <Location left="842" top="911" />
        <Size width="498" height="536" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static BuildingDialog _buildingDialog</Member>
        <Member type="Field">private static CardInstructionDialog _cardInstructionDialog</Member>
        <Member type="Field">private static SellPropertyDialog _sellPropertyDialog</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Constructor">public GameController(string currency)</Member>
        <Member type="Method">public void SetGame(Partita partita, ControlPanel controlPanel)</Member>
        <Member type="Method">public void DemolisciEdificioClicked()</Member>
        <Member type="Method">public void VendiTerrenoClicked()</Member>
        <Member type="Method">public void AcquistaUnTerrenoClicked()</Member>
        <Member type="Method">public void PescaUnaCartaClicked()</Member>
        <Member type="Method">public void CostruisciEdificioClicked()</Member>
        <Member type="Method">public void PagaCauzioneClicked()</Member>
        <Member type="Method">public void TerminaTurnoClicked()</Member>
        <Member type="Method">public void TiraDadiClicked()</Member>
        <Member type="Method">public void PagaTassaClicked()</Member>
        <Member type="Method">public void PagaAffittoClicked()</Member>
        <Member type="Method">public void PagaClicked()</Member>
        <Member type="Method">public void RitiraDallaPartitaClicked()</Member>
        <Member type="Method">public void TerminaPartita()</Member>
        <Member type="Method">public void SpostaInPrigione()</Member>
        <Member type="Method">public void SpostaGiocatore()</Member>
        <Member type="Method">private void SettaParametriGiocatore(int spostamento, bool passaDalVia)</Member>
        <Member type="Method">private void SettaParametriGiocatore(string destinazione, bool passaDalVia)</Member>
        <Member type="Method">private void GiocaUnAltroTurno()</Member>
        <Member type="Method">private bool TentaPaga(decimal importo)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BuildingDialog</Name>
        <Access>Public</Access>
        <Location left="775" top="1583" />
        <Size width="620" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer component</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _playerNameLabel</Member>
        <Member type="Field">private Button _returnButton</Member>
        <Member type="Field">private Button _okButton</Member>
        <Member type="Field">private Label _currentStatusLabel</Member>
        <Member type="Field">private Label _buildingValueLabel</Member>
        <Member type="Field">private Label _questionLabelLabel</Member>
        <Member type="Field">private List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">private TerrenoNormale _toModify</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private Action _action</Member>
        <Member type="Constructor">public BuildingDialog(string currency)</Member>
        <Member type="Property">public TerrenoNormale ToModify { get; }</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(List&lt;Model.TerrenoNormale&gt; terreni, Action action, string playerName)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>Action</Name>
        <Access>Public</Access>
        <Location left="998" top="2083" />
        <Size width="162" height="98" />
        <Collapsed>False</Collapsed>
        <Value>BUILD</Value>
        <Value>DEMOLISH</Value>
      </Entity>
      <Entity type="Class">
        <Name>CardInstructionDialog</Name>
        <Access>Public</Access>
        <Location left="262" top="1583" />
        <Size width="470" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label _cardLabel</Member>
        <Member type="Field">private Label _instructionLabel</Member>
        <Member type="Field">private Panel _cardPanel</Member>
        <Member type="Field">private Button _okButton</Member>
        <Member type="Constructor">public CardInstructionDialog()</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(string card, string instructions, Color color)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SellPropertyDialog</Name>
        <Access>Public</Access>
        <Location left="1435" top="1583" />
        <Size width="495" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _playerNameLabel</Member>
        <Member type="Field">private Label _currentStatusLabel</Member>
        <Member type="Field">private Label _propertyValueLabel</Member>
        <Member type="Field">private Label _questionLabel</Member>
        <Member type="Field">private Button _returnButton</Member>
        <Member type="Field">private Button _okButton</Member>
        <Member type="Field">private Terreno _toSell</Member>
        <Member type="Field">private List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Constructor">public SellPropertyDialog(string currency)</Member>
        <Member type="Property">public Terreno ToSell { get; }</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(List&lt;Model.Terreno&gt; terreni, string playerName)</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainView</Name>
        <Access>Public</Access>
        <Location left="1835" top="323" />
        <Size width="581" height="485" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Panel _welcomePanel</Member>
        <Member type="Field">private MenuStrip _menuBar</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripMonopoliItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripHelpItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripNewGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripEndGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripExitItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripRulesItem</Member>
        <Member type="Field">private Controller _controller</Member>
        <Member type="Field">private UserPanel _userPanel</Member>
        <Member type="Field">private IGameBoard _gameBoardPanel</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Constructor">public MainView()</Member>
        <Member type="Property">public Panel ActivePanel { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void SetGame(Partita partita, IGameBoard gameBoardPanel, UserPanel userPanel)</Member>
        <Member type="Method">public void EndGame()</Member>
        <Member type="Method">private void ToolStripExitItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripNewGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripEndGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void GameEnded(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripRulesItem_Click(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDeedFactory</Name>
        <Access>Public</Access>
        <Location left="946" top="102" />
        <Size width="307" height="93" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Deed [] CreateDeeds(object [] properties)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICellsFactory</Name>
        <Access>Public</Access>
        <Location left="287" top="102" />
        <Size width="476" height="93" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Cell [] CreateViewCells(object [] cells, Size gamePanelSize, string currency)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IConfigLoader</Name>
        <Access>Public</Access>
        <Location left="1430" top="102" />
        <Size width="335" height="248" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Load()</Member>
        <Member type="Method">object [] GetCells()</Member>
        <Member type="Method">object [] GetCards()</Member>
        <Member type="Method">object GetPlayBoard()</Member>
        <Member type="Method">int GetPlayerMinNum()</Member>
        <Member type="Method">int GetPlayerMaxNum()</Member>
        <Member type="Method">int GetNumCells()</Member>
        <Member type="Method">string GetCurrencySymbol()</Member>
        <Member type="Method">Dictonary&lt;int, decimal&gt; GetInitialMoneyValues()</Member>
        <Member type="Method">Dictionary&lt;int, int&gt; GetInitialDeeds()</Member>
        <Member type="Method">Dictionary&lt;string, Image&gt; GetMarkers()</Member>
      </Entity>
      <Entity type="Class">
        <Name>ShuffleUtility</Name>
        <Access>Public</Access>
        <Location left="39" top="594" />
        <Size width="258" height="148" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static void Shuffle(object[] obj, int max)</Member>
        <Member type="Method">public static void Shuffle(IList obj)</Member>
        <Member type="Method">private static void Swap(IList obj, int i, int r)</Member>
        <Member type="Method">private static void Swap(object[] obj, int i, int r)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NewGameDialog</Name>
        <Access>Public</Access>
        <Location left="1986" top="854" />
        <Size width="424" height="689" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private FlowLayoutPanel _playerInfoPanel</Member>
        <Member type="Field">private Label _playerNameLabel</Member>
        <Member type="Field">private Label _playerMarkerLabel</Member>
        <Member type="Field">private TextBox[] _playerNames</Member>
        <Member type="Field">private ComboBox [] _playerMarkers</Member>
        <Member type="Field">private CheckBox _durationCheckBox</Member>
        <Member type="Field">private readonly int _minPlayers</Member>
        <Member type="Field">private readonly int _maxPlayers</Member>
        <Member type="Field">private readonly string [] _markers</Member>
        <Member type="Field">private static string _nullComboItem</Member>
        <Member type="Field">private static string _wrongPlayerName</Member>
        <Member type="Field">private static string _notInsertedPlayerName</Member>
        <Member type="Field">private static string _notInsertedPlayerMarker</Member>
        <Member type="Field">private Label _descriptionLabel1</Member>
        <Member type="Field">private Label _descriptionLabel2</Member>
        <Member type="Field">private Label _hoursLabel</Member>
        <Member type="Field">private Label _minutesLabel</Member>
        <Member type="Field">private Label _mainLabel</Member>
        <Member type="Field">private Button _cancelButton</Member>
        <Member type="Field">private Button _createButton</Member>
        <Member type="Field">private ErrorProvider _playerInfoError</Member>
        <Member type="Field">private NumericUpDown _minutesUpDown</Member>
        <Member type="Field">private NumericUpDown _hoursUpDown</Member>
        <Member type="Constructor">public NewGameDialog(int maxPlayers, int minPlayers, string[] markers)</Member>
        <Member type="Property">public string [] PlayerNames { get; }</Member>
        <Member type="Property">public string [] Markers { get; }</Member>
        <Member type="Property">public TimeSpan Duration { get; }</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void PlayerName_KeyUp(object sender, EventArgs e)</Member>
        <Member type="Method">private void Check_NameUniqueness(TextBox validating, int position)</Member>
        <Member type="Method">private void IsValidData()</Member>
        <Member type="Method">private bool MinPlayersInserted()</Member>
        <Member type="Method">private void PlayerMarker_Change(object sender, EventArgs e)</Member>
        <Member type="Method">private void DurationSetting_CheckedChanged(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>InitialDeedsDialog</Name>
        <Access>Public</Access>
        <Location left="39" top="807" />
        <Size width="342" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static string _descriptionTex</Member>
        <Member type="Field">private static string _newMoneyText</Member>
        <Member type="Field">private static string _totalPayedText</Member>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _totalPayedLabel</Member>
        <Member type="Field">private Label _newMoneyLabel</Member>
        <Member type="Field">private FlowLayoutPanel _deedsPanel</Member>
        <Member type="Constructor">public InitialDeedsDialog()</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">public void SetName(string name)</Member>
        <Member type="Method">public void SetDeeds(Deed[] deeds)</Member>
        <Member type="Method">public void SetNewMoney(decimal newMoney, string currency)</Member>
        <Member type="Method">public void SetTotalPayed(decimal total, string currency)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1091</X>
          <Y>848</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_gameController</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_buildingDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1405</X>
          <Y>1238</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_sellPropertyDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>480</X>
          <Y>1237</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_cardInstructionDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>656</X>
          <Y>572</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>532</X>
          <Y>224</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_cellsFactory</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1104</X>
          <Y>435</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_deedFactory</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1442</X>
          <Y>570</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1604</X>
          <Y>408</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_builder</EndRole>
      </Relationship>
      <Relationship type="Association" first="0" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1376</X>
          <Y>656</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_mainView</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="0" second="10">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>731</X>
          <Y>665</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>350</X>
          <Y>665</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="0" second="11">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1402</X>
          <Y>728</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1905</X>
          <Y>1090</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="0" second="12">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>813</X>
          <Y>728</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Nesting" first="2" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>MVC</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>MainView</Name>
        <Access>Public</Access>
        <Location left="398" top="44" />
        <Size width="308" height="485" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Panel _welcomePanel</Member>
        <Member type="Field">private MenuStrip _menuBar</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripMonopoliItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripHelpItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripNewGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripEndGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripExitItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripRulesItem</Member>
        <Member type="Field">private Controller _controller</Member>
        <Member type="Field">private UserPanel _userPanel</Member>
        <Member type="Field">private IGameBoard _gameBoardPanel</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Constructor">public MainView()</Member>
        <Member type="Property">public Panel ActivePanel { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void SetGame(Partita partita, IGameBoard gameBoardPanel, UserPanel userPanel)</Member>
        <Member type="Method">public void EndGame()</Member>
        <Member type="Method">private void ToolStripExitItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripNewGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripEndGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void GameEnded(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripRulesItem_Click(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Partita</Name>
        <Access>Public</Access>
        <Location left="489" top="704" />
        <Size width="331" height="587" />
        <Collapsed>True</Collapsed>
        <Member type="Field">readonly Giocatore[] _giocatori</Member>
        <Member type="Field">readonly TavolaDaGioco _tavolaDaGioco</Member>
        <Member type="Field">int _giocatoreCorrente</Member>
        <Member type="Field">Random _random</Member>
        <Member type="Field">int _risultatoDado1</Member>
        <Member type="Field">int _risultatoDado2</Member>
        <Member type="Field">int _nDoppi</Member>
        <Member type="Field">Carta _cartaCorrente</Member>
        <Member type="Field">TimeSpan _tempoDaGiocare</Member>
        <Member type="Field">Timer _timerPartita</Member>
        <Member type="Event">public event PlayerChangedHandler PlayerChanged</Member>
        <Member type="Event">public event GameEndedHandler GameEnded</Member>
        <Member type="Event">public event GameTimeHandler GameTimer</Member>
        <Member type="Constructor">public Partita(Giocatore[] giocatori, TavolaDaGioco tavolaDaGioco, TimeSpan tempoDaGiocare)</Member>
        <Member type="Property">public Giocatore[] Giocatori { get; }</Member>
        <Member type="Property">public TavolaDaGioco TavolaDaGioco { get; }</Member>
        <Member type="Property">public int RisultatoDado1 { get; set; }</Member>
        <Member type="Property">public int RisultatoDado2 { get; set; }</Member>
        <Member type="Property">public int NDoppi { get; set; }</Member>
        <Member type="Property">public int GiocatoreCorrente { get; set; }</Member>
        <Member type="Property">public Carta CartaCorrente { get; set; }</Member>
        <Member type="Property">public TimeSpan TempoDaGiocare { get; }</Member>
        <Member type="Method">public Giocatore GetGiocatoreCorrente()</Member>
        <Member type="Method">public bool TiraDadi()</Member>
        <Member type="Method">public void PassaTurnoProssimoGiocatoreAttivo()</Member>
        <Member type="Method">public void AggiornaAffittoTerreniGiocatore()</Member>
        <Member type="Method">public void AvviaTimer()</Member>
        <Member type="Method">public void ArrestaTimer()</Member>
        <Member type="Method">public List&lt;Statistica&gt; CalcolaStatisctiche()</Member>
        <Member type="Method">public void OnTimerChanged(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserPanel</Name>
        <Access>Public</Access>
        <Location left="899" top="134" />
        <Size width="359" height="213" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private IContainer component</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Field">private GameInfoPanel _gameInfoPanel</Member>
        <Member type="Constructor">public UserPanel(Point location, Size size, ControlPanel controlPanel, GameInfoPanel gameInfoPanel)</Member>
        <Member type="Constructor">public UserPanel(IContainer container)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ControlPanel</Name>
        <Access>Public</Access>
        <Location left="1190" top="309" />
        <Size width="338" height="1114" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button _ritiraDallaPartitaButton</Member>
        <Member type="Field">private Button _pagaCauzioneButton</Member>
        <Member type="Field">private Button _costruisciEdificioButton</Member>
        <Member type="Field">private Button _demolisciEdificioButton</Member>
        <Member type="Field">private Button _vendiTerrenoButton</Member>
        <Member type="Field">private Button _acquistaTerrenoButton</Member>
        <Member type="Field">private Button _pescaUnaCartaButton</Member>
        <Member type="Field">private Button _tiraDadiButton</Member>
        <Member type="Field">private Button _terminaTurnoButton</Member>
        <Member type="Field">private Button _pagaTassaButton</Member>
        <Member type="Field">private Button _pagaAffittoButton</Member>
        <Member type="Field">private Button _pagaButton</Member>
        <Member type="Field">private Button _visualizzaContrattoButton</Member>
        <Member type="Field">private Button _visualizzaInformazioniButton</Member>
        <Member type="Field">private List&lt;Button&gt; _buttons</Member>
        <Member type="Field">private GameController _controller</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private Deed [] _deedPool</Member>
        <Member type="Field">private static DeedInfoDialog _deedInfoDialog</Member>
        <Member type="Field">private static PropertyInfoDialog _propertyInfoDialog</Member>
        <Member type="Constructor">public ControlPanel(Point location, Size size, string name, GameController controller, Partita partita, Deed [] deedPool, string currency)</Member>
        <Member type="Constructor">public ControlPanel(IContainer container)</Member>
        <Member type="Property">public Button TiraDadiButton { get; }</Member>
        <Member type="Property">public Button PagaButton { get; }</Member>
        <Member type="Property">public Button PagaAffittoButton { get; }</Member>
        <Member type="Property">public Button PagaTassaButton { get; }</Member>
        <Member type="Property">public Button PagaCauzioneButton { get; }</Member>
        <Member type="Property">public Button PescaUnaCartaButton { get; }</Member>
        <Member type="Property">public Button TerminaTurnoButton { get; }</Member>
        <Member type="Property">public Button AcquistaTerrenoButton { get; }</Member>
        <Member type="Property">public Button VendiTerrenoButton { get; }</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void RegistraEventiCaselle()</Member>
        <Member type="Method">private void RegistraEventiCarta(Carta carta)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Member type="Method">private void VisualizzaInformazioniButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void RitiraDallaPartitaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaCauzioneButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void CostruisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void DemolisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TiraDadiButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TerminaTurnoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PescaUnaCartaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void AcquistaUnTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void VendiTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaTassaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaAffittoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTassa(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaVaiInPrigione(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTerreno(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaCarta(object sender, EventArgs e)</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaRiceviPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviAvantiPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviIndietroPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPrigionePescata(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameInfoPanel</Name>
        <Access>Public</Access>
        <Location left="689" top="309" />
        <Size width="320" height="434" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label _labelGiocatore</Member>
        <Member type="Field">private Label _labelCapitale</Member>
        <Member type="Field">private Label _labelPosizione</Member>
        <Member type="Field">private Label _labelInPrigione</Member>
        <Member type="Field">private Label _labelTempo</Member>
        <Member type="Field">private TextBox _logBox</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static string _giocatoreCorrente</Member>
        <Member type="Field">private static string _capitaleGiocatoreCorrente</Member>
        <Member type="Field">private static string _posizioneGiocatoreCorrente</Member>
        <Member type="Field">private static int _maxLogLines</Member>
        <Member type="Field">private readonly string _currency</Member>
        <Member type="Constructor">public GameInfoPanel(Point location, Size size, Partita partita, string currency)</Member>
        <Member type="Constructor">public GameInfoPanel(IContainer container)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void AggiornaDatiGiocatoreCorrente(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaLog(LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaTimer(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IGameBoard</Name>
        <Access>Public</Access>
        <Location left="398" top="309" />
        <Size width="256" height="231" />
        <Collapsed>True</Collapsed>
        <Member type="Property">Point BoardLocation { get; }</Member>
        <Member type="Property">Size BoardSize { get; }</Member>
        <Member type="Property">Control [] Cells { get; }</Member>
        <Member type="Property">Control [] Markers { get; }</Member>
        <Member type="Method">void AddCell(int index, Control cell)</Member>
        <Member type="Method">void RemoveCell(int index, Control cell)</Member>
        <Member type="Method">void PutMarkers(Control marker)</Member>
        <Member type="Method">void PutMarkersOnStartCell(object [] players)</Member>
        <Member type="Method">void RemoveMarker(Control marker)</Member>
        <Member type="Method">void DisposeGameBoard()</Member>
      </Entity>
      <Entity type="Class">
        <Name>Controller</Name>
        <Access>Public</Access>
        <Location left="1581" top="47" />
        <Size width="329" height="315" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private MainView _mainView</Member>
        <Member type="Field">private ICellsFactory _cellsFactory</Member>
        <Member type="Field">private IConfigLoader _builder</Member>
        <Member type="Field">private IDeedFactory _deedFactory</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private GameController _gameController</Member>
        <Member type="Constructor">public Controller(MainView mainView)</Member>
        <Member type="Method">public void NewGame_ButtonClicked()</Member>
        <Member type="Method">public void EndGame_ButtonClicked()</Member>
        <Member type="Method">private void CreateGame(string[] names, string[] markers, TimeSpan gameTime)</Member>
        <Member type="Method">private Giocatore [] CreatePlayers(string[] names, string[] markers, Casella startCell)</Member>
        <Member type="Method">private void ViewGame(Partita partita, TavolaDaGioco gameBoard, TimeSpan gameTime)</Member>
        <Member type="Method">private void CreateViewCells(IGameBoard boardPanel, TavolaDaGioco gameBoard)</Member>
        <Member type="Method">private void DisplayInitialDeeds(Deed [] deedPool, Partita partita)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameController</Name>
        <Access>Public</Access>
        <Location left="1590" top="801" />
        <Size width="316" height="536" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static BuildingDialog _buildingDialog</Member>
        <Member type="Field">private static CardInstructionDialog _cardInstructionDialog</Member>
        <Member type="Field">private static SellPropertyDialog _sellPropertyDialog</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Constructor">public GameController(string currency)</Member>
        <Member type="Method">public void SetGame(Partita partita, ControlPanel controlPanel)</Member>
        <Member type="Method">public void DemolisciEdificioClicked()</Member>
        <Member type="Method">public void VendiTerrenoClicked()</Member>
        <Member type="Method">public void AcquistaUnTerrenoClicked()</Member>
        <Member type="Method">public void PescaUnaCartaClicked()</Member>
        <Member type="Method">public void CostruisciEdificioClicked()</Member>
        <Member type="Method">public void PagaCauzioneClicked()</Member>
        <Member type="Method">public void TerminaTurnoClicked()</Member>
        <Member type="Method">public void TiraDadiClicked()</Member>
        <Member type="Method">public void PagaTassaClicked()</Member>
        <Member type="Method">public void PagaAffittoClicked()</Member>
        <Member type="Method">public void PagaClicked()</Member>
        <Member type="Method">public void RitiraDallaPartitaClicked()</Member>
        <Member type="Method">public void TerminaPartita()</Member>
        <Member type="Method">public void SpostaInPrigione()</Member>
        <Member type="Method">public void SpostaGiocatore()</Member>
        <Member type="Method">private void SettaParametriGiocatore(int spostamento, bool passaDalVia)</Member>
        <Member type="Method">private void SettaParametriGiocatore(string destinazione, bool passaDalVia)</Member>
        <Member type="Method">private void GiocaUnAltroTurno()</Member>
        <Member type="Method">private bool TentaPaga(decimal importo)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Giocatore</Name>
        <Access>Public</Access>
        <Location left="428" top="511" />
        <Size width="388" height="604" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private readonly string _nome</Member>
        <Member type="Field">private decimal _capitale</Member>
        <Member type="Field">private readonly string _segnalino</Member>
        <Member type="Field">bool _inPrigione</Member>
        <Member type="Field">bool _attivo</Member>
        <Member type="Field">Casella _posizioneCorrente</Member>
        <Member type="Field">List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">Dictionary&lt;string, int&gt; _terreniPerGruppo</Member>
        <Member type="Field">int _turniInPrigione</Member>
        <Member type="Event">public event PositionChangedHandler PositionChanged</Member>
        <Member type="Event">public event MoneyChangedHandler MoneyChanged</Member>
        <Member type="Event">public event PlayerQuitHandler PlayerQuit</Member>
        <Member type="Constructor">public Giocatore(string nome, int capitale, string segnalino, Casella posizioneIniziale)</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public decimal Capitale { get; }</Member>
        <Member type="Property">public string Segnalino { get; }</Member>
        <Member type="Property">public bool InPrigione { get; set; }</Member>
        <Member type="Property">public bool Attivo { get; set; }</Member>
        <Member type="Property">public Casella PosizioneCorrente { get; set; }</Member>
        <Member type="Property">public List&lt;Terreno&gt; Terreni { get; }</Member>
        <Member type="Property">public int TurniInPrigione { get; set; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; TerreniPerGruppo { get; }</Member>
        <Member type="Method">public virtual void IncrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void DecrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void AcquistaTerreno(Terreno terreno)</Member>
        <Member type="Method">public virtual void VendiTerreno(Terreno terreno)</Member>
        <Member type="Method">public bool HaTerreniEdificabili()</Member>
        <Member type="Method">public void Fallisci()</Member>
        <Member type="Method">private void OnPositionChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnMoneyChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnPlayerQuit(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TavolaDaGioco</Name>
        <Access>Public</Access>
        <Location left="1190" top="704" />
        <Size width="360" height="332" />
        <Collapsed>True</Collapsed>
        <Member type="Field">Casella [] _caselle</Member>
        <Member type="Field">Carta [] _imprevisti</Member>
        <Member type="Field">Carta [] _probabilità</Member>
        <Member type="Field">int _cimaProbabilità</Member>
        <Member type="Field">int _cimaImprevisti</Member>
        <Member type="Field">readonly Dictionary&lt;string, int&gt; _gruppi</Member>
        <Member type="Constructor">public TavolaDaGioco(Casella [] caselle, Carta [] imprevisti, Carta [] probabilità)</Member>
        <Member type="Property">public Carta [] Imprevisti { get; }</Member>
        <Member type="Property">public Carta [] Probabilità { get; }</Member>
        <Member type="Property">public Casella[] Caselle { get; }</Member>
        <Member type="Property">public int CimaProbabilità { get; }</Member>
        <Member type="Property">public int CimaImprevisti { get; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; Gruppi { get; }</Member>
        <Member type="Method">public virtual Carta GetCartaPerTipo(TipoCarta tipo)</Member>
        <Member type="Method">public void ResetTavolaDaGioco()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Carta</Name>
        <Access>Public</Access>
        <Location left="1393" top="511" />
        <Size width="296" height="233" />
        <Collapsed>True</Collapsed>
        <Member type="Field">TipoCarta _tipo</Member>
        <Member type="Field">string _istruzioni</Member>
        <Member type="Field">Color _colore</Member>
        <Member type="Constructor">public Carta(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Property">public TipoCarta Tipo { get; }</Member>
        <Member type="Property">public string Istruzioni { get; }</Member>
        <Member type="Property">public Color Colore { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="1061" top="511" />
        <Size width="272" height="230" />
        <Collapsed>True</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>MVC</Text>
        <Location left="1347" top="155" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="6">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>328</X>
          <Y>58</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>342</X>
          <Y>739</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="1" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>845</X>
          <Y>745</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="7" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1483</X>
          <Y>825</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>682</X>
          <Y>784</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>590</X>
          <Y>135</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="6" second="7">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1800</X>
          <Y>776</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1553</X>
          <Y>332</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1719</X>
          <Y>773</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="7" second="3">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1719</X>
          <Y>771</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1596</X>
          <Y>333</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="5">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>464</X>
          <Y>244</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="5" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>456</X>
          <Y>399</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>456</X>
          <Y>479</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="9" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="9" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>946</X>
          <Y>204</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>610</X>
          <Y>674</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="3" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="3" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1479</X>
          <Y>388</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1479</X>
          <Y>477</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1030</X>
          <Y>605</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>744</X>
          <Y>668</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="5" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>566</X>
          <Y>380</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1168</X>
          <Y>465</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="4" second="8">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>752</X>
          <Y>379</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="4" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>850</X>
          <Y>517</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>684</X>
          <Y>678</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>360</X>
          <Y>79</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>434</X>
          <Y>717</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1223</X>
          <Y>204</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Dependency" first="4" second="11">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>942</X>
          <Y>416</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1091</X>
          <Y>486</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="4" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>903</X>
          <Y>379</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>859</X>
          <Y>708</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1111</X>
          <Y>348</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>989</X>
          <Y>728</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Partita-Giocatore-TavolaDaGioco</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Partita</Name>
        <Access>Public</Access>
        <Location left="185" top="100" />
        <Size width="518" height="587" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly Giocatore[] _giocatori</Member>
        <Member type="Field">readonly TavolaDaGioco _tavolaDaGioco</Member>
        <Member type="Field">int _giocatoreCorrente</Member>
        <Member type="Field">Random _random</Member>
        <Member type="Field">int _risultatoDado1</Member>
        <Member type="Field">int _risultatoDado2</Member>
        <Member type="Field">int _nDoppi</Member>
        <Member type="Field">Carta _cartaCorrente</Member>
        <Member type="Field">TimeSpan _tempoDaGiocare</Member>
        <Member type="Field">Timer _timerPartita</Member>
        <Member type="Event">public event EventHandler PlayerChanged</Member>
        <Member type="Event">public event EventHandler GameEnded</Member>
        <Member type="Event">public event EventHandler GameTimer</Member>
        <Member type="Constructor">public Partita(Giocatore[] giocatori, TavolaDaGioco tavolaDaGioco, TimeSpan tempoDaGiocare)</Member>
        <Member type="Property">public Giocatore[] Giocatori { get; }</Member>
        <Member type="Property">public TavolaDaGioco TavolaDaGioco { get; }</Member>
        <Member type="Property">public int RisultatoDado1 { get; set; }</Member>
        <Member type="Property">public int RisultatoDado2 { get; set; }</Member>
        <Member type="Property">public int NDoppi { get; set; }</Member>
        <Member type="Property">public int GiocatoreCorrente { get; set; }</Member>
        <Member type="Property">public Carta CartaCorrente { get; set; }</Member>
        <Member type="Property">public TimeSpan TempoDaGiocare { get; }</Member>
        <Member type="Method">public Giocatore GetGiocatoreCorrente()</Member>
        <Member type="Method">public bool TiraDadi()</Member>
        <Member type="Method">public void PassaTurnoProssimoGiocatoreAttivo()</Member>
        <Member type="Method">public void AggiornaAffittoTerreniGiocatore()</Member>
        <Member type="Method">public void AvviaTimer()</Member>
        <Member type="Method">public void ArrestaTimer()</Member>
        <Member type="Method">public List&lt;Statistica&gt; CalcolaStatisctiche()</Member>
        <Member type="Method">public void OnTimerChanged(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Giocatore</Name>
        <Access>Public</Access>
        <Location left="122" top="820" />
        <Size width="463" height="604" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _nome</Member>
        <Member type="Field">private decimal _capitale</Member>
        <Member type="Field">private readonly string _segnalino</Member>
        <Member type="Field">bool _inPrigione</Member>
        <Member type="Field">bool _attivo</Member>
        <Member type="Field">Casella _posizioneCorrente</Member>
        <Member type="Field">List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">Dictionary&lt;string, int&gt; _terreniPerGruppo</Member>
        <Member type="Field">int _turniInPrigione</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PositionChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; MoneyChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PlayerQuit</Member>
        <Member type="Constructor">public Giocatore(string nome, int capitale, string segnalino, Casella posizioneIniziale)</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public decimal Capitale { get; }</Member>
        <Member type="Property">public string Segnalino { get; }</Member>
        <Member type="Property">public bool InPrigione { get; set; }</Member>
        <Member type="Property">public bool Attivo { get; set; }</Member>
        <Member type="Property">public Casella PosizioneCorrente { get; set; }</Member>
        <Member type="Property">public List&lt;Terreno&gt; Terreni { get; }</Member>
        <Member type="Property">public int TurniInPrigione { get; set; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; TerreniPerGruppo { get; }</Member>
        <Member type="Method">public virtual void IncrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void DecrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void AcquistaTerreno(Terreno terreno)</Member>
        <Member type="Method">public virtual void VendiTerreno(Terreno terreno)</Member>
        <Member type="Method">public bool HaTerreniEdificabili()</Member>
        <Member type="Method">public void Fallisci()</Member>
        <Member type="Method">private void OnPositionChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnMoneyChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnPlayerQuit(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TavolaDaGioco</Name>
        <Access>Public</Access>
        <Location left="669" top="820" />
        <Size width="430" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Casella [] _caselle</Member>
        <Member type="Field">Carta [] _imprevisti</Member>
        <Member type="Field">Carta [] _probabilità</Member>
        <Member type="Field">int _cimaProbabilità</Member>
        <Member type="Field">int _cimaImprevisti</Member>
        <Member type="Field">readonly Dictionary&lt;string, int&gt; _gruppi</Member>
        <Member type="Constructor">public TavolaDaGioco(Casella [] caselle, Carta [] imprevisti, Carta [] probabilità)</Member>
        <Member type="Property">public Carta [] Imprevisti { get; }</Member>
        <Member type="Property">public Carta [] Probabilità { get; }</Member>
        <Member type="Property">public Casella[] Caselle { get; }</Member>
        <Member type="Property">public int CimaProbabilità { get; }</Member>
        <Member type="Property">public int CimaImprevisti { get; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; Gruppi { get; }</Member>
        <Member type="Method">public virtual Carta GetCartaPerTipo(TipoCarta tipo)</Member>
        <Member type="Method">public void ResetTavolaDaGioco()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShuffleUtility</Name>
        <Access>Public</Access>
        <Location left="835" top="312" />
        <Size width="257" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static void Shuffle(object[] obj, int max)</Member>
        <Member type="Method">public static void Shuffle(IList obj)</Member>
        <Member type="Method">private static void Swap(IList obj, int i, int r)</Member>
        <Member type="Method">private static void Swap(object[] obj, int i, int r)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Partita - Giocatori - TavolaDaGioco</Text>
        <Location left="894" top="114" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndRole>-_giocatori</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>515</X>
          <Y>732</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>798</X>
          <Y>787</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_tavolaDaGioco</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="0" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>TavolaDaGioco - Caselle</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>TavolaDaGioco</Name>
        <Access>Public</Access>
        <Location left="470" top="164" />
        <Size width="430" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Casella [] _caselle</Member>
        <Member type="Field">Carta [] _imprevisti</Member>
        <Member type="Field">Carta [] _probabilità</Member>
        <Member type="Field">int _cimaProbabilità</Member>
        <Member type="Field">int _cimaImprevisti</Member>
        <Member type="Field">readonly Dictionary&lt;string, int&gt; _gruppi</Member>
        <Member type="Constructor">public TavolaDaGioco(Casella [] caselle, Carta [] imprevisti, Carta [] probabilità)</Member>
        <Member type="Property">public Carta [] Imprevisti { get; }</Member>
        <Member type="Property">public Carta [] Probabilità { get; }</Member>
        <Member type="Property">public Casella[] Caselle { get; }</Member>
        <Member type="Property">public int CimaProbabilità { get; }</Member>
        <Member type="Property">public int CimaImprevisti { get; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; Gruppi { get; }</Member>
        <Member type="Method">public virtual Carta GetCartaPerTipo(TipoCarta tipo)</Member>
        <Member type="Method">public void ResetTavolaDaGioco()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Probabilità</Name>
        <Access>Public</Access>
        <Location left="1110" top="1341" />
        <Size width="488" height="180" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler ProbabilitàEvent</Member>
        <Member type="Constructor">public Probabilità(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Imprevisti</Name>
        <Access>Public</Access>
        <Location left="1110" top="1140" />
        <Size width="488" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler ImprevistiEvent</Member>
        <Member type="Constructor">public Imprevisti(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VaiInPrigione</Name>
        <Access>Public</Access>
        <Location left="1110" top="95" />
        <Size width="488" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler VaiInPrigioneEvent</Member>
        <Member type="Constructor">public VaiInPrigione(int id, string nome, string tipoCella)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Prigione</Name>
        <Access>Public</Access>
        <Location left="1110" top="714" />
        <Size width="488" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal _cauzione</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public Prigione(int id, string nome, string tipoCella, decimal cauzione, Image image)</Member>
        <Member type="Property">public decimal Cauzione { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Via</Name>
        <Access>Public</Access>
        <Location left="1110" top="926" />
        <Size width="488" height="197" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal _indennità</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public Via(int id, string nome, string tipoCella, decimal indennità, Image image)</Member>
        <Member type="Property">public decimal Indennità { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ParcheggioGratuito</Name>
        <Access>Public</Access>
        <Location left="1110" top="528" />
        <Size width="488" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public ParcheggioGratuito(int id, string nome, string tipoCella, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tassa</Name>
        <Access>Public</Access>
        <Location left="1110" top="293" />
        <Size width="488" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Field">decimal _importo</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler TassaEvent</Member>
        <Member type="Constructor">public Tassa(int id, string nome, string tipoCella, decimal importo, Image image)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="542" top="694" />
        <Size width="284" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Terreno</Name>
        <Access>Public</Access>
        <Location left="216" top="1092" />
        <Size width="753" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal[] _valoriDiAffitto</Member>
        <Member type="Field">readonly decimal _valore</Member>
        <Member type="Field">readonly decimal _valoreDiVendita</Member>
        <Member type="Field">decimal _affitto</Member>
        <Member type="Field">Giocatore _proprietario</Member>
        <Member type="Field">readonly string _nomeGruppo</Member>
        <Member type="Event">public event EventHandler TerrenoEvent</Member>
        <Member type="Constructor">protected Terreno(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo)</Member>
        <Member type="Property">public decimal [] ValoriDiAffitto { get; }</Member>
        <Member type="Property">public decimal Valore { get; }</Member>
        <Member type="Property">public decimal ValoreDiVendita { get; }</Member>
        <Member type="Property">public decimal Affitto { get; set; }</Member>
        <Member type="Property">public Giocatore Proprietario { get; set; }</Member>
        <Member type="Property">public string NomeGruppo { get; }</Member>
        <Member type="Method">public abstract bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public abstract void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public abstract override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>TavolaDaGioco - Caselle</Text>
        <Location left="291" top="742" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1075</X>
          <Y>1419</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>915</X>
          <Y>803</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1036</X>
          <Y>1232</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>955</X>
          <Y>803</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1044</X>
          <Y>1019</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>946</X>
          <Y>803</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1059</X>
          <Y>803</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>889</X>
          <Y>803</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1077</X>
          <Y>596</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>914</X>
          <Y>803</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="3" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1074</X>
          <Y>164</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>917</X>
          <Y>803</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="7" second="8">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1085</X>
          <Y>380</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>906</X>
          <Y>803</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="9" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="0" second="8">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <EndRole>-_caselle</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>TavolaDaGioco - Carte</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Carta</Name>
        <Access>Public</Access>
        <Location left="944" top="629" />
        <Size width="296" height="233" />
        <Collapsed>False</Collapsed>
        <Member type="Field">TipoCarta _tipo</Member>
        <Member type="Field">string _istruzioni</Member>
        <Member type="Field">Color _colore</Member>
        <Member type="Constructor">public Carta(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Property">public TipoCarta Tipo { get; }</Member>
        <Member type="Property">public string Istruzioni { get; }</Member>
        <Member type="Property">public Color Colore { get; }</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaMuoviIndietro</Name>
        <Access>Internal</Access>
        <Location left="109" top="1207" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _destinazione</Member>
        <Member type="Event">public event EventHandler CartaMuoviIndietroEvent</Member>
        <Member type="Constructor">public CartaMuoviIndietro(TipoCarta tipo, string istruzioni, string destinazione)</Member>
        <Member type="Property">public string Destinazione { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaMuoviAvanti</Name>
        <Access>Internal</Access>
        <Location left="109" top="1021" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _destinazione</Member>
        <Member type="Event">public event EventHandler CartaMuoviAvantiEvent</Member>
        <Member type="Constructor">public CartaMuoviAvanti(TipoCarta tipo, string istruzioni, string destinazione)</Member>
        <Member type="Property">public string Destinazione { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPagaPesca</Name>
        <Access>Internal</Access>
        <Location left="109" top="834" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importo</Member>
        <Member type="Event">public event EventHandler CartaPagaPescaEvent</Member>
        <Member type="Constructor">public CartaPagaPesca(TipoCarta tipo, string istruzioni, decimal importo)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPrigione</Name>
        <Access>Internal</Access>
        <Location left="109" top="680" />
        <Size width="596" height="132" />
        <Collapsed>False</Collapsed>
        <Member type="Event">public event EventHandler CartaPrigioneEvent</Member>
        <Member type="Constructor">public CartaPrigione(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPagaPerEdifici</Name>
        <Access>Internal</Access>
        <Location left="109" top="461" />
        <Size width="596" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importoCasa</Member>
        <Member type="Field">private readonly decimal _importoAlbergo</Member>
        <Member type="Event">public event EventHandler CartaPagaPerEdificiEvent</Member>
        <Member type="Constructor">public CartaPagaPerEdifici(TipoCarta tipo, string istruzioni, decimal importoCasa, decimal importoAlbergo)</Member>
        <Member type="Property">public decimal ImportoCasa { get; }</Member>
        <Member type="Property">public decimal ImportoAlbergo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaRicevi</Name>
        <Access>Internal</Access>
        <Location left="109" top="276" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importo</Member>
        <Member type="Event">public event EventHandler CartaRiceviEvent</Member>
        <Member type="Constructor">public CartaRicevi(TipoCarta tipo, string istruzioni, decimal importo)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPaga</Name>
        <Access>Internal</Access>
        <Location left="109" top="89" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importo</Member>
        <Member type="Event">public event EventHandler CartaPagaEvent</Member>
        <Member type="Constructor">public CartaPaga(TipoCarta tipo, string istruzioni, decimal importo)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>TipoCarta</Name>
        <Access>Public</Access>
        <Location left="1007" top="975" />
        <Size width="162" height="111" />
        <Collapsed>False</Collapsed>
        <Value>IMPREVISTI</Value>
        <Value>PROBABILITA</Value>
      </Entity>
      <Entity type="Class">
        <Name>TavolaDaGioco</Name>
        <Access>Public</Access>
        <Location left="878" top="125" />
        <Size width="430" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Casella [] _caselle</Member>
        <Member type="Field">Carta [] _imprevisti</Member>
        <Member type="Field">Carta [] _probabilità</Member>
        <Member type="Field">int _cimaProbabilità</Member>
        <Member type="Field">int _cimaImprevisti</Member>
        <Member type="Field">readonly Dictionary&lt;string, int&gt; _gruppi</Member>
        <Member type="Constructor">public TavolaDaGioco(Casella [] caselle, Carta [] imprevisti, Carta [] probabilità)</Member>
        <Member type="Property">public Carta [] Imprevisti { get; }</Member>
        <Member type="Property">public Carta [] Probabilità { get; }</Member>
        <Member type="Property">public Casella[] Caselle { get; }</Member>
        <Member type="Property">public int CimaProbabilità { get; }</Member>
        <Member type="Property">public int CimaImprevisti { get; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; Gruppi { get; }</Member>
        <Member type="Method">public virtual Carta GetCartaPerTipo(TipoCarta tipo)</Member>
        <Member type="Method">public void ResetTavolaDaGioco()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>TavolaDaGioco - Carte</Text>
        <Location left="1013" top="1218" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Nesting" first="0" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>731</X>
          <Y>1296</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>845</X>
          <Y>747</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>755</X>
          <Y>1115</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>821</X>
          <Y>747</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>733</X>
          <Y>921</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>842</X>
          <Y>746</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="5" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>737</X>
          <Y>570</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>838</X>
          <Y>747</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>774</X>
          <Y>368</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>801</X>
          <Y>747</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="7" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>785</X>
          <Y>180</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>792</X>
          <Y>747</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="9" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <EndRole>-_imprevisti, -_probabilità</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Terreno-Gerarchia</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Terreno</Name>
        <Access>Public</Access>
        <Location left="693" top="148" />
        <Size width="753" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal[] _valoriDiAffitto</Member>
        <Member type="Field">readonly decimal _valore</Member>
        <Member type="Field">readonly decimal _valoreDiVendita</Member>
        <Member type="Field">decimal _affitto</Member>
        <Member type="Field">Giocatore _proprietario</Member>
        <Member type="Field">readonly string _nomeGruppo</Member>
        <Member type="Event">public event EventHandler TerrenoEvent</Member>
        <Member type="Constructor">protected Terreno(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo)</Member>
        <Member type="Property">public decimal [] ValoriDiAffitto { get; }</Member>
        <Member type="Property">public decimal Valore { get; }</Member>
        <Member type="Property">public decimal ValoreDiVendita { get; }</Member>
        <Member type="Property">public decimal Affitto { get; set; }</Member>
        <Member type="Property">public Giocatore Proprietario { get; set; }</Member>
        <Member type="Property">public string NomeGruppo { get; }</Member>
        <Member type="Method">public abstract bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public abstract void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public abstract override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TerrenoNormale</Name>
        <Access>Public</Access>
        <Location left="96" top="793" />
        <Size width="979" height="366" />
        <Collapsed>False</Collapsed>
        <Member type="Field">static int _maxEdifici</Member>
        <Member type="Field">readonly decimal _prezzoCostruzioneEdificio</Member>
        <Member type="Field">int _numeroEdifici</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; BuildingChanged</Member>
        <Member type="Constructor">public TerrenoNormale(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo, decimal prezzoCostruzioneEdificio)</Member>
        <Member type="Property">public decimal PrezzoCostruzioneEdificio { get; }</Member>
        <Member type="Property">public int NumeroEdifici { get; }</Member>
        <Member type="Property">public int MaxEdifici { get; }</Member>
        <Member type="Method">public virtual void CostruisciEdificio()</Member>
        <Member type="Method">public virtual void DemolisciEdificio()</Member>
        <Member type="Method">public virtual bool IsEdificabile(int terreniDelGruppo)</Member>
        <Member type="Method">public override void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public override bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public void ResetEdifici()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public void OnBuildingChanged(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TerrenoSpeciale</Name>
        <Access>Public</Access>
        <Location left="1093" top="793" />
        <Size width="870" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Constructor">public TerrenoSpeciale(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffitto, string nomeGruppo, Image image)</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public override bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="164" top="238" />
        <Size width="284" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Gerarchia Casella-Terreno</Text>
        <Location left="1684" top="305" />
        <Size width="193" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>591</X>
          <Y>768</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1066</X>
          <Y>592</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1066</X>
          <Y>592</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="0" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Giocatore-Caselle</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="851" top="180" />
        <Size width="284" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Giocatore</Name>
        <Access>Public</Access>
        <Location left="150" top="116" />
        <Size width="463" height="604" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _nome</Member>
        <Member type="Field">private decimal _capitale</Member>
        <Member type="Field">private readonly string _segnalino</Member>
        <Member type="Field">bool _inPrigione</Member>
        <Member type="Field">bool _attivo</Member>
        <Member type="Field">Casella _posizioneCorrente</Member>
        <Member type="Field">List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">Dictionary&lt;string, int&gt; _terreniPerGruppo</Member>
        <Member type="Field">int _turniInPrigione</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PositionChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; MoneyChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PlayerQuit</Member>
        <Member type="Constructor">public Giocatore(string nome, int capitale, string segnalino, Casella posizioneIniziale)</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public decimal Capitale { get; }</Member>
        <Member type="Property">public string Segnalino { get; }</Member>
        <Member type="Property">public bool InPrigione { get; set; }</Member>
        <Member type="Property">public bool Attivo { get; set; }</Member>
        <Member type="Property">public Casella PosizioneCorrente { get; set; }</Member>
        <Member type="Property">public List&lt;Terreno&gt; Terreni { get; }</Member>
        <Member type="Property">public int TurniInPrigione { get; set; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; TerreniPerGruppo { get; }</Member>
        <Member type="Method">public virtual void IncrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void DecrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void AcquistaTerreno(Terreno terreno)</Member>
        <Member type="Method">public virtual void VendiTerreno(Terreno terreno)</Member>
        <Member type="Method">public bool HaTerreniEdificabili()</Member>
        <Member type="Method">public void Fallisci()</Member>
        <Member type="Method">private void OnPositionChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnMoneyChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnPlayerQuit(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Terreno</Name>
        <Access>Public</Access>
        <Location left="665" top="633" />
        <Size width="744" height="408" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal[] _valoriDiAffitto</Member>
        <Member type="Field">readonly decimal _valore</Member>
        <Member type="Field">readonly decimal _valoreDiVendita</Member>
        <Member type="Field">decimal _affitto</Member>
        <Member type="Field">Giocatore _proprietario</Member>
        <Member type="Field">readonly string _nomeGruppo</Member>
        <Member type="Event">public event EventHandler TerrenoEvent</Member>
        <Member type="Constructor">protected Terreno(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo)</Member>
        <Member type="Property">public decimal [] ValoriDiAffitto { get; }</Member>
        <Member type="Property">public decimal Valore { get; }</Member>
        <Member type="Property">public decimal ValoreDiVendita { get; }</Member>
        <Member type="Property">public decimal Affitto { get; set; }</Member>
        <Member type="Property">public Giocatore Proprietario { get; set; }</Member>
        <Member type="Property">public string NomeGruppo { get; }</Member>
        <Member type="Method">public abstract bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public abstract void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public abstract override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>List&lt;Terreno&gt;</Name>
        <Access>Public</Access>
        <Location left="228" top="871" />
        <Size width="267" height="77" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Associazioni di Giocatore</Text>
        <Location left="1230" top="265" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_posizioneCorrente</EndRole>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="3">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndRole>-_terreni</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Partita-Dettagli</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Structure">
        <Name>Statistica</Name>
        <Access>Public</Access>
        <Location left="60" top="98" />
        <Size width="238" height="221" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public string _nomeGiocatore</Member>
        <Member type="Field">public decimal _capitale</Member>
        <Member type="Field">public int _numeroTerreniPosseduti</Member>
        <Member type="Field">public decimal _valoreComplessivoTerreni</Member>
        <Member type="Field">public int _numeroCasePossedute</Member>
        <Member type="Field">public int _numeroAlberghiPosseduti</Member>
        <Member type="Field">public decimal _valoreComplessivoEdifici</Member>
        <Member type="Field">public decimal _valoreTotale</Member>
      </Entity>
      <Entity type="Class">
        <Name>Partita</Name>
        <Access>Public</Access>
        <Location left="527" top="52" />
        <Size width="518" height="587" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly Giocatore[] _giocatori</Member>
        <Member type="Field">readonly TavolaDaGioco _tavolaDaGioco</Member>
        <Member type="Field">int _giocatoreCorrente</Member>
        <Member type="Field">Random _random</Member>
        <Member type="Field">int _risultatoDado1</Member>
        <Member type="Field">int _risultatoDado2</Member>
        <Member type="Field">int _nDoppi</Member>
        <Member type="Field">Carta _cartaCorrente</Member>
        <Member type="Field">TimeSpan _tempoDaGiocare</Member>
        <Member type="Field">Timer _timerPartita</Member>
        <Member type="Event">public event EventHandler PlayerChanged</Member>
        <Member type="Event">public event EventHandler GameEnded</Member>
        <Member type="Event">public event EventHandler GameTimer</Member>
        <Member type="Constructor">public Partita(Giocatore[] giocatori, TavolaDaGioco tavolaDaGioco, TimeSpan tempoDaGiocare)</Member>
        <Member type="Property">public Giocatore[] Giocatori { get; }</Member>
        <Member type="Property">public TavolaDaGioco TavolaDaGioco { get; }</Member>
        <Member type="Property">public int RisultatoDado1 { get; set; }</Member>
        <Member type="Property">public int RisultatoDado2 { get; set; }</Member>
        <Member type="Property">public int NDoppi { get; set; }</Member>
        <Member type="Property">public int GiocatoreCorrente { get; set; }</Member>
        <Member type="Property">public Carta CartaCorrente { get; set; }</Member>
        <Member type="Property">public TimeSpan TempoDaGiocare { get; }</Member>
        <Member type="Method">public Giocatore GetGiocatoreCorrente()</Member>
        <Member type="Method">public bool TiraDadi()</Member>
        <Member type="Method">public void PassaTurnoProssimoGiocatoreAttivo()</Member>
        <Member type="Method">public void AggiornaAffittoTerreniGiocatore()</Member>
        <Member type="Method">public void AvviaTimer()</Member>
        <Member type="Method">public void ArrestaTimer()</Member>
        <Member type="Method">public List&lt;Statistica&gt; CalcolaStatisctiche()</Member>
        <Member type="Method">public void OnTimerChanged(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Carta</Name>
        <Access>Public</Access>
        <Location left="60" top="396" />
        <Size width="296" height="233" />
        <Collapsed>False</Collapsed>
        <Member type="Field">TipoCarta _tipo</Member>
        <Member type="Field">string _istruzioni</Member>
        <Member type="Field">Color _colore</Member>
        <Member type="Constructor">public Carta(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Property">public TipoCarta Tipo { get; }</Member>
        <Member type="Property">public string Istruzioni { get; }</Member>
        <Member type="Property">public Color Colore { get; }</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Partita - Funzionamento e ciclo di vita</Text>
        <Location left="1095" top="125" />
        <Size width="160" height="79" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Nesting" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>443</X>
          <Y>207</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>341</X>
          <Y>207</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="1" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_cartaCorrente</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>View-Base</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>UserPanel</Name>
        <Access>Public</Access>
        <Location left="107" top="428" />
        <Size width="549" height="226" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer component</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Field">private GameInfoPanel _gameInfoPanel</Member>
        <Member type="Constructor">public UserPanel(Point location, Size size, ControlPanel controlPanel, GameInfoPanel gameInfoPanel)</Member>
        <Member type="Constructor">public UserPanel(IContainer container)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainView</Name>
        <Access>Public</Access>
        <Location left="830" top="125" />
        <Size width="493" height="485" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Panel _welcomePanel</Member>
        <Member type="Field">private MenuStrip _menuBar</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripMonopoliItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripHelpItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripNewGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripEndGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripExitItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripRulesItem</Member>
        <Member type="Field">private Controller _controller</Member>
        <Member type="Field">private UserPanel _userPanel</Member>
        <Member type="Field">private IGameBoard _gameBoardPanel</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Constructor">public MainView()</Member>
        <Member type="Property">public Panel ActivePanel { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void SetGame(Partita partita, IGameBoard gameBoardPanel, UserPanel userPanel)</Member>
        <Member type="Method">public void EndGame()</Member>
        <Member type="Method">private void ToolStripExitItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripNewGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripEndGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void GameEnded(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripRulesItem_Click(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IGameBoard</Name>
        <Access>Public</Access>
        <Location left="107" top="159" />
        <Size width="412" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Property">Point BoardLocation { get; }</Member>
        <Member type="Property">Size BoardSize { get; }</Member>
        <Member type="Property">Control [] Cells { get; }</Member>
        <Member type="Property">Control [] Markers { get; }</Member>
        <Member type="Method">void AddCell(int index, Control cell)</Member>
        <Member type="Method">void RemoveCell(int index, Control cell)</Member>
        <Member type="Method">void PutMarkers(Control marker)</Member>
        <Member type="Method">void PutMarkersOnStartCell(object [] players)</Member>
        <Member type="Method">void RemoveMarker(Control marker)</Member>
        <Member type="Method">void DisposeGameBoard()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>MainView</Text>
        <Location left="594" top="125" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>791</X>
          <Y>277</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>544</X>
          <Y>277</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_gameBoardPanel</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>771</X>
          <Y>500</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>716</X>
          <Y>500</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_userPanel</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>View-GameBoard</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>ChanceCell</Name>
        <Access>Public</Access>
        <Location left="988" top="149" />
        <Size width="808" height="232" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public ChanceCell(Position position, Size size, Point location, int id, string name, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CornerCell</Name>
        <Access>Public</Access>
        <Location left="988" top="673" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public CornerCell(Size size, Point location, int id, string name, Image image, string currency)</Member>
        <Member type="Constructor">public CornerCell(Size size, Point location, int id, string name, decimal value, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CommonPropertyCell</Name>
        <Access>Public</Access>
        <Location left="988" top="401" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private Panel _colorPanel</Member>
        <Member type="Constructor">public CommonPropertyCell(Position position, Size size, Point location, int id, string name, decimal value, string group, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public void DrawBuilding(int buildingsNum)</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Cell</Name>
        <Access>Public</Access>
        <Location left="235" top="1253" />
        <Size width="502" height="220" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static decimal _ratio</Member>
        <Member type="Field">protected readonly string _currency</Member>
        <Member type="Constructor">protected Cell(Size size, Point location, int id, string currency)</Member>
        <Member type="Method">protected abstract void DesignDefaultCell()</Member>
        <Member type="Method">protected abstract void Design90RotatedCell()</Member>
        <Member type="Method">protected abstract void Design180RotatedCell()</Member>
        <Member type="Method">protected abstract void Design270RotatedCell()</Member>
        <Member type="Method">public abstract void Resize(int width, int height)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TaxCell</Name>
        <Access>Public</Access>
        <Location left="988" top="1212" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public TaxCell(Position position, Size size, Point location, int id, string name, decimal value, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SpecialPropertyCell</Name>
        <Access>Public</Access>
        <Location left="988" top="947" />
        <Size width="808" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _valueLabel</Member>
        <Member type="Field">private PictureBox _pictureBox</Member>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public SpecialPropertyCell(Position position, Size size, Point location, int id, string name, decimal value, string group, Image image, string currency)</Member>
        <Member type="Method">protected override void DesignDefaultCell()</Member>
        <Member type="Method">protected override void Design90RotatedCell()</Member>
        <Member type="Method">protected override void Design180RotatedCell()</Member>
        <Member type="Method">protected override void Design270RotatedCell()</Member>
        <Member type="Method">public override void Resize(int width, int height)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameBoard</Name>
        <Access>Public</Access>
        <Location left="155" top="649" />
        <Size width="657" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Cell [] _cells</Member>
        <Member type="Field">privateDictionary&lt;string, PictureBox&gt; _markers</Member>
        <Member type="Constructor">public GameBoard(Partita partita, Dictionary&lt;string, Image&gt; markers, int cellNum, Point location, Size size, string name)</Member>
        <Member type="Property">public Control [] Cells { get; }</Member>
        <Member type="Property">public Point BoardLocation { get; }</Member>
        <Member type="Property">public Size BoardSize { get; }</Member>
        <Member type="Property">public Control [] Markers { get; }</Member>
        <Member type="Method">public void AddCell(int index, Control cell)</Member>
        <Member type="Method">public void RemoveCell(int index, Control cell)</Member>
        <Member type="Method">public void PutMarkers(Control marker)</Member>
        <Member type="Method">public void PutMarkersOnStartCell(object [] players)</Member>
        <Member type="Method">public void RemoveMarker(Control marker)</Member>
        <Member type="Method">public void DisposeGameBoard()</Member>
        <Member type="Method">private void RefreshPosition(object sender, EventArgs e)</Member>
        <Member type="Method">private void RefreshBuildings(object sender, EventArgs e)</Member>
        <Member type="Method">private void DeleteMarker(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IGameBoard</Name>
        <Access>Public</Access>
        <Location left="278" top="293" />
        <Size width="412" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Property">Point BoardLocation { get; }</Member>
        <Member type="Property">Size BoardSize { get; }</Member>
        <Member type="Property">Control [] Cells { get; }</Member>
        <Member type="Property">Control [] Markers { get; }</Member>
        <Member type="Method">void AddCell(int index, Control cell)</Member>
        <Member type="Method">void RemoveCell(int index, Control cell)</Member>
        <Member type="Method">void PutMarkers(Control marker)</Member>
        <Member type="Method">void PutMarkersOnStartCell(object [] players)</Member>
        <Member type="Method">void RemoveMarker(Control marker)</Member>
        <Member type="Method">void DisposeGameBoard()</Member>
      </Entity>
      <Entity type="Comment">
        <Text>GameBoard
</Text>
        <Location left="506" top="176" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Enum">
        <Name>Position</Name>
        <Access>Public</Access>
        <Location left="235" top="1035" />
        <Size width="162" height="135" />
        <Collapsed>False</Collapsed>
        <Value>BOTTOM</Value>
        <Value>LEFT</Value>
        <Value>TOP</Value>
        <Value>RIGHT</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>961</X>
          <Y>802</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>836</X>
          <Y>1365</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>937</X>
          <Y>527</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>858</X>
          <Y>1365</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="0" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>897</X>
          <Y>291</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>897</X>
          <Y>1364</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="5" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>911</X>
          <Y>1097</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>885</X>
          <Y>1364</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="4" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>932</X>
          <Y>1364</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>865</X>
          <Y>1365</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="6" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndRole>-_cells</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="6" second="7">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Nesting" first="3" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>View-UserPanel</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>UserPanel</Name>
        <Access>Public</Access>
        <Location left="72" top="256" />
        <Size width="549" height="226" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer component</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Field">private GameInfoPanel _gameInfoPanel</Member>
        <Member type="Constructor">public UserPanel(Point location, Size size, ControlPanel controlPanel, GameInfoPanel gameInfoPanel)</Member>
        <Member type="Constructor">public UserPanel(IContainer container)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameInfoPanel</Name>
        <Access>Public</Access>
        <Location left="126" top="644" />
        <Size width="442" height="434" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label _labelGiocatore</Member>
        <Member type="Field">private Label _labelCapitale</Member>
        <Member type="Field">private Label _labelPosizione</Member>
        <Member type="Field">private Label _labelInPrigione</Member>
        <Member type="Field">private Label _labelTempo</Member>
        <Member type="Field">private TextBox _logBox</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static string _giocatoreCorrente</Member>
        <Member type="Field">private static string _capitaleGiocatoreCorrente</Member>
        <Member type="Field">private static string _posizioneGiocatoreCorrente</Member>
        <Member type="Field">private static int _maxLogLines</Member>
        <Member type="Field">private readonly string _currency</Member>
        <Member type="Constructor">public GameInfoPanel(Point location, Size size, Partita partita, string currency)</Member>
        <Member type="Constructor">public GameInfoPanel(IContainer container)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void AggiornaDatiGiocatoreCorrente(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaLog(LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaTimer(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ControlPanel</Name>
        <Access>Public</Access>
        <Location left="795" top="38" />
        <Size width="745" height="1114" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button _ritiraDallaPartitaButton</Member>
        <Member type="Field">private Button _pagaCauzioneButton</Member>
        <Member type="Field">private Button _costruisciEdificioButton</Member>
        <Member type="Field">private Button _demolisciEdificioButton</Member>
        <Member type="Field">private Button _vendiTerrenoButton</Member>
        <Member type="Field">private Button _acquistaTerrenoButton</Member>
        <Member type="Field">private Button _pescaUnaCartaButton</Member>
        <Member type="Field">private Button _tiraDadiButton</Member>
        <Member type="Field">private Button _terminaTurnoButton</Member>
        <Member type="Field">private Button _pagaTassaButton</Member>
        <Member type="Field">private Button _pagaAffittoButton</Member>
        <Member type="Field">private Button _pagaButton</Member>
        <Member type="Field">private Button _visualizzaContrattoButton</Member>
        <Member type="Field">private Button _visualizzaInformazioniButton</Member>
        <Member type="Field">private List&lt;Button&gt; _buttons</Member>
        <Member type="Field">private GameController _controller</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private Deed [] _deedPool</Member>
        <Member type="Field">private static DeedInfoDialog _deedInfoDialog</Member>
        <Member type="Field">private static PropertyInfoDialog _propertyInfoDialog</Member>
        <Member type="Constructor">public ControlPanel(Point location, Size size, string name, GameController controller, Partita partita, Deed [] deedPool, string currency)</Member>
        <Member type="Constructor">public ControlPanel(IContainer container)</Member>
        <Member type="Property">public Button TiraDadiButton { get; }</Member>
        <Member type="Property">public Button PagaButton { get; }</Member>
        <Member type="Property">public Button PagaAffittoButton { get; }</Member>
        <Member type="Property">public Button PagaTassaButton { get; }</Member>
        <Member type="Property">public Button PagaCauzioneButton { get; }</Member>
        <Member type="Property">public Button PescaUnaCartaButton { get; }</Member>
        <Member type="Property">public Button TerminaTurnoButton { get; }</Member>
        <Member type="Property">public Button AcquistaTerrenoButton { get; }</Member>
        <Member type="Property">public Button VendiTerrenoButton { get; }</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void RegistraEventiCaselle()</Member>
        <Member type="Method">private void RegistraEventiCarta(Carta carta)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Member type="Method">private void VisualizzaInformazioniButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void RitiraDallaPartitaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaCauzioneButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void CostruisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void DemolisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TiraDadiButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TerminaTurnoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PescaUnaCartaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void AcquistaUnTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void VendiTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaTassaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaAffittoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTassa(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaVaiInPrigione(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTerreno(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaCarta(object sender, EventArgs e)</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaRiceviPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviAvantiPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviIndietroPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPrigionePescata(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>UserPanel</Text>
        <Location left="265" top="47" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_controlPanel</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_gameInfoPanel</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ControlPanel-Dettagli</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>ControlPanel</Name>
        <Access>Public</Access>
        <Location left="724" top="222" />
        <Size width="320" height="1114" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button _ritiraDallaPartitaButton</Member>
        <Member type="Field">private Button _pagaCauzioneButton</Member>
        <Member type="Field">private Button _costruisciEdificioButton</Member>
        <Member type="Field">private Button _demolisciEdificioButton</Member>
        <Member type="Field">private Button _vendiTerrenoButton</Member>
        <Member type="Field">private Button _acquistaTerrenoButton</Member>
        <Member type="Field">private Button _pescaUnaCartaButton</Member>
        <Member type="Field">private Button _tiraDadiButton</Member>
        <Member type="Field">private Button _terminaTurnoButton</Member>
        <Member type="Field">private Button _pagaTassaButton</Member>
        <Member type="Field">private Button _pagaAffittoButton</Member>
        <Member type="Field">private Button _pagaButton</Member>
        <Member type="Field">private Button _visualizzaContrattoButton</Member>
        <Member type="Field">private Button _visualizzaInformazioniButton</Member>
        <Member type="Field">private List&lt;Button&gt; _buttons</Member>
        <Member type="Field">private GameController _controller</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private Deed [] _deedPool</Member>
        <Member type="Field">private static DeedInfoDialog _deedInfoDialog</Member>
        <Member type="Field">private static PropertyInfoDialog _propertyInfoDialog</Member>
        <Member type="Constructor">public ControlPanel(Point location, Size size, string name, GameController controller, Partita partita, Deed [] deedPool, string currency)</Member>
        <Member type="Constructor">public ControlPanel(IContainer container)</Member>
        <Member type="Property">public Button TiraDadiButton { get; }</Member>
        <Member type="Property">public Button PagaButton { get; }</Member>
        <Member type="Property">public Button PagaAffittoButton { get; }</Member>
        <Member type="Property">public Button PagaTassaButton { get; }</Member>
        <Member type="Property">public Button PagaCauzioneButton { get; }</Member>
        <Member type="Property">public Button PescaUnaCartaButton { get; }</Member>
        <Member type="Property">public Button TerminaTurnoButton { get; }</Member>
        <Member type="Property">public Button AcquistaTerrenoButton { get; }</Member>
        <Member type="Property">public Button VendiTerrenoButton { get; }</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void RegistraEventiCaselle()</Member>
        <Member type="Method">private void RegistraEventiCarta(Carta carta)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Member type="Method">private void VisualizzaInformazioniButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void RitiraDallaPartitaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaCauzioneButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void CostruisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void DemolisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TiraDadiButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TerminaTurnoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PescaUnaCartaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void AcquistaUnTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void VendiTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaTassaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaAffittoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTassa(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaVaiInPrigione(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTerreno(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaCarta(object sender, EventArgs e)</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaRiceviPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviAvantiPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviIndietroPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPrigionePescata(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PropertyInfoDialog</Name>
        <Access>Public</Access>
        <Location left="128" top="390" />
        <Size width="445" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _propertyOwnerLabel</Member>
        <Member type="Field">private Label _propertyDataLabel</Member>
        <Member type="Field">private BUtton _returnButton</Member>
        <Member type="Field">private IEnumerable&lt;Model.Terreno&gt; _terreni</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Constructor">public PropertyInfoDialog(IEnumerable&lt;Model.Terreno&gt; terreni, string currency)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DeedInfoDialog</Name>
        <Access>Public</Access>
        <Location left="1230" top="97" />
        <Size width="575" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Panel _deedInfoPanel</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _playerName</Member>
        <Member type="Field">private Button _returnButton</Member>
        <Member type="Field">private Deed [] _deeds</Member>
        <Member type="Field">private Dictionary&lt;string, int&gt; _properties</Member>
        <Member type="Constructor">public DeedInfoDialog()</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(String playerName, List&lt;Model.Terreno&gt; terreni, Deed[] deeds)</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>ControlPanel - Associazioni</Text>
        <Location left="194" top="137" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>CommonPropertyDeed</Name>
        <Access>Public</Access>
        <Location left="115" top="908" />
        <Size width="863" height="164" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private decimal _houseCost</Member>
        <Member type="Field">private static string _doubleRentInfo</Member>
        <Member type="Constructor">public CommonPropertyDeed(int id, string name, decimal value, decimal sellValue, decimal[] rentValues, string groupColor, decimal houseCost, string currency)</Member>
        <Member type="Property">protected decimal HouseCost { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SpecialPropertyDeed</Name>
        <Access>Public</Access>
        <Location left="988" top="908" />
        <Size width="823" height="149" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Image _image</Member>
        <Member type="Constructor">public SpecialPropertyDeed(int id, string name, decimal value, decimal sellValue, decimal[] rentValues, string groupName, Image image, string currency)</Member>
        <Member type="Property">protected Image Image { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Deed</Name>
        <Access>Public</Access>
        <Location left="695" top="463" />
        <Size width="577" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static Font _valueFont</Member>
        <Member type="Field">private string _deedName</Member>
        <Member type="Field">private readonly int _id</Member>
        <Member type="Field">private decimal _value</Member>
        <Member type="Field">private decimal _sellValue</Member>
        <Member type="Field">private decimal [] _rentValues</Member>
        <Member type="Field">private string _group</Member>
        <Member type="Field">protected readonly string _currency</Member>
        <Member type="Constructor">protected Deed(int id, string name, decimal value, decimal sellValue, decimal [] rentValues, string currency)</Member>
        <Member type="Property">public int ID { get; }</Member>
        <Member type="Property">protected string DeedName { get; }</Member>
        <Member type="Property">protected decimal Value { get; }</Member>
        <Member type="Property">protected decimal SellValue { get; }</Member>
        <Member type="Property">protected decimal [] RentValues { get; }</Member>
        <Member type="Property">protected string Group { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>461</X>
          <Y>331</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_propertyInfoDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_deedInfoDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="5" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="0" second="6">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_deeds</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="2" second="6">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1567</X>
          <Y>623</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>-_deeds</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Controller-Base</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IConfigLoader</Name>
        <Access>Public</Access>
        <Location left="889" top="64" />
        <Size width="299" height="248" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Load()</Member>
        <Member type="Method">object [] GetCells()</Member>
        <Member type="Method">object [] GetCards()</Member>
        <Member type="Method">object GetPlayBoard()</Member>
        <Member type="Method">int GetPlayerMinNum()</Member>
        <Member type="Method">int GetPlayerMaxNum()</Member>
        <Member type="Method">int GetNumCells()</Member>
        <Member type="Method">string GetCurrencySymbol()</Member>
        <Member type="Method">Dictonary&lt;int, decimal&gt; GetInitialMoneyValues()</Member>
        <Member type="Method">Dictionary&lt;int, int&gt; GetInitialDeeds()</Member>
        <Member type="Method">Dictionary&lt;string, Image&gt; GetMarkers()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICellsFactory</Name>
        <Access>Public</Access>
        <Location left="70" top="64" />
        <Size width="443" height="93" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Cell [] CreateViewCells(object [] cells, Size gamePanelSize, string currency)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IDeedFactory</Name>
        <Access>Public</Access>
        <Location left="563" top="64" />
        <Size width="264" height="93" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Deed [] CreateDeeds(object [] properties)</Member>
      </Entity>
      <Entity type="Class">
        <Name>Controller</Name>
        <Access>Public</Access>
        <Location left="450" top="359" />
        <Size width="482" height="330" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private MainView _mainView</Member>
        <Member type="Field">private ICellsFactory _cellsFactory</Member>
        <Member type="Field">private IConfigLoader _builder</Member>
        <Member type="Field">private IDeedFactory _deedFactory</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private GameController _gameController</Member>
        <Member type="Constructor">public Controller(MainView mainView)</Member>
        <Member type="Method">public void NewGame_ButtonClicked()</Member>
        <Member type="Method">public void EndGame_ButtonClicked()</Member>
        <Member type="Method">private void CreateGame(string[] names, string[] markers, TimeSpan gameTime)</Member>
        <Member type="Method">private Giocatore [] CreatePlayers(string[] names, string[] markers, Casella startCell)</Member>
        <Member type="Method">private void ViewGame(Partita partita, TavolaDaGioco gameBoard, TimeSpan gameTime)</Member>
        <Member type="Method">private void CreateViewCells(IGameBoard boardPanel, TavolaDaGioco gameBoard)</Member>
        <Member type="Method">private void DisplayInitialDeeds(Deed [] deedPool, Partita partita)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShuffleUtility</Name>
        <Access>Public</Access>
        <Location left="70" top="503" />
        <Size width="258" height="148" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static void Shuffle(object[] obj, int max)</Member>
        <Member type="Method">public static void Shuffle(IList obj)</Member>
        <Member type="Method">private static void Swap(IList obj, int i, int r)</Member>
        <Member type="Method">private static void Swap(object[] obj, int i, int r)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Main Controller</Text>
        <Location left="70" top="297" />
        <Size width="150" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="3" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1025</X>
          <Y>469</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1063</X>
          <Y>370</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_builder</EndRole>
      </Relationship>
      <Relationship type="Association" first="3" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>694</X>
          <Y>333</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_deedFactory</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>333</X>
          <Y>467</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>315</X>
          <Y>186</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_cellsFactory</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="3" second="4">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Controller-View</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Controller</Name>
        <Access>Public</Access>
        <Location left="645" top="221" />
        <Size width="485" height="330" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private MainView _mainView</Member>
        <Member type="Field">private ICellsFactory _cellsFactory</Member>
        <Member type="Field">private IConfigLoader _builder</Member>
        <Member type="Field">private IDeedFactory _deedFactory</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private GameController _gameController</Member>
        <Member type="Constructor">public Controller(MainView mainView)</Member>
        <Member type="Method">public void NewGame_ButtonClicked()</Member>
        <Member type="Method">public void EndGame_ButtonClicked()</Member>
        <Member type="Method">private void CreateGame(string[] names, string[] markers, TimeSpan gameTime)</Member>
        <Member type="Method">private Giocatore [] CreatePlayers(string[] names, string[] markers, Casella startCell)</Member>
        <Member type="Method">private void ViewGame(Partita partita, TavolaDaGioco gameBoard, TimeSpan gameTime)</Member>
        <Member type="Method">private void CreateViewCells(IGameBoard boardPanel, TavolaDaGioco gameBoard)</Member>
        <Member type="Method">private void DisplayInitialDeeds(Deed [] deedPool, Partita partita)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainView</Name>
        <Access>Public</Access>
        <Location left="50" top="68" />
        <Size width="484" height="485" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Panel _welcomePanel</Member>
        <Member type="Field">private MenuStrip _menuBar</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripMonopoliItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripHelpItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripNewGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripEndGameItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripExitItem</Member>
        <Member type="Field">private ToolStripMenuItem _toolStripRulesItem</Member>
        <Member type="Field">private Controller _controller</Member>
        <Member type="Field">private UserPanel _userPanel</Member>
        <Member type="Field">private IGameBoard _gameBoardPanel</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Constructor">public MainView()</Member>
        <Member type="Property">public Panel ActivePanel { get; }</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">public void SetGame(Partita partita, IGameBoard gameBoardPanel, UserPanel userPanel)</Member>
        <Member type="Method">public void EndGame()</Member>
        <Member type="Method">private void ToolStripExitItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripNewGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripEndGameItem_Click(object sender, EventArgs e)</Member>
        <Member type="Method">private void GameEnded(object sender, EventArgs e)</Member>
        <Member type="Method">private void ToolStripRulesItem_Click(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Controller - View</Text>
        <Location left="776" top="68" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>620</X>
          <Y>327</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>563</X>
          <Y>327</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_mainView</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Controller-Dialogs</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Controller</Name>
        <Access>Public</Access>
        <Location left="35" top="35" />
        <Size width="485" height="330" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private MainView _mainView</Member>
        <Member type="Field">private ICellsFactory _cellsFactory</Member>
        <Member type="Field">private IConfigLoader _builder</Member>
        <Member type="Field">private IDeedFactory _deedFactory</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private GameController _gameController</Member>
        <Member type="Constructor">public Controller(MainView mainView)</Member>
        <Member type="Method">public void NewGame_ButtonClicked()</Member>
        <Member type="Method">public void EndGame_ButtonClicked()</Member>
        <Member type="Method">private void CreateGame(string[] names, string[] markers, TimeSpan gameTime)</Member>
        <Member type="Method">private Giocatore [] CreatePlayers(string[] names, string[] markers, Casella startCell)</Member>
        <Member type="Method">private void ViewGame(Partita partita, TavolaDaGioco gameBoard, TimeSpan gameTime)</Member>
        <Member type="Method">private void CreateViewCells(IGameBoard boardPanel, TavolaDaGioco gameBoard)</Member>
        <Member type="Method">private void DisplayInitialDeeds(Deed [] deedPool, Partita partita)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>InitialDeedsDialog</Name>
        <Access>Public</Access>
        <Location left="215" top="425" />
        <Size width="342" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static string _descriptionTex</Member>
        <Member type="Field">private static string _newMoneyText</Member>
        <Member type="Field">private static string _totalPayedText</Member>
        <Member type="Field">private Label _nameLabel</Member>
        <Member type="Field">private Label _totalPayedLabel</Member>
        <Member type="Field">private Label _newMoneyLabel</Member>
        <Member type="Field">private FlowLayoutPanel _deedsPanel</Member>
        <Member type="Constructor">public InitialDeedsDialog()</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">public void SetName(string name)</Member>
        <Member type="Method">public void SetDeeds(Deed[] deeds)</Member>
        <Member type="Method">public void SetNewMoney(decimal newMoney, string currency)</Member>
        <Member type="Method">public void SetTotalPayed(decimal total, string currency)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>NewGameDialog</Name>
        <Access>Public</Access>
        <Location left="610" top="35" />
        <Size width="412" height="689" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private FlowLayoutPanel _playerInfoPanel</Member>
        <Member type="Field">private Label _playerNameLabel</Member>
        <Member type="Field">private Label _playerMarkerLabel</Member>
        <Member type="Field">private TextBox[] _playerNames</Member>
        <Member type="Field">private ComboBox [] _playerMarkers</Member>
        <Member type="Field">private CheckBox _durationCheckBox</Member>
        <Member type="Field">private readonly int _minPlayers</Member>
        <Member type="Field">private readonly int _maxPlayers</Member>
        <Member type="Field">private readonly string [] _markers</Member>
        <Member type="Field">private static string _nullComboItem</Member>
        <Member type="Field">private static string _wrongPlayerName</Member>
        <Member type="Field">private static string _notInsertedPlayerName</Member>
        <Member type="Field">private static string _notInsertedPlayerMarker</Member>
        <Member type="Field">private Label _descriptionLabel1</Member>
        <Member type="Field">private Label _descriptionLabel2</Member>
        <Member type="Field">private Label _hoursLabel</Member>
        <Member type="Field">private Label _minutesLabel</Member>
        <Member type="Field">private Label _mainLabel</Member>
        <Member type="Field">private Button _cancelButton</Member>
        <Member type="Field">private Button _createButton</Member>
        <Member type="Field">private ErrorProvider _playerInfoError</Member>
        <Member type="Field">private NumericUpDown _minutesUpDown</Member>
        <Member type="Field">private NumericUpDown _hoursUpDown</Member>
        <Member type="Constructor">public NewGameDialog(int maxPlayers, int minPlayers, string[] markers)</Member>
        <Member type="Property">public string [] PlayerNames { get; }</Member>
        <Member type="Property">public string [] Markers { get; }</Member>
        <Member type="Property">public TimeSpan Duration { get; }</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void PlayerName_KeyUp(object sender, EventArgs e)</Member>
        <Member type="Method">private void Check_NameUniqueness(TextBox validating, int position)</Member>
        <Member type="Method">private void IsValidData()</Member>
        <Member type="Method">private bool MinPlayersInserted()</Member>
        <Member type="Method">private void PlayerMarker_Change(object sender, EventArgs e)</Member>
        <Member type="Method">private void DurationSetting_CheckedChanged(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Controller - Dialog Windows</Text>
        <Location left="35" top="460" />
        <Size width="126" height="91" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="0" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Controller-CellFactory</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Enum">
        <Name>Position</Name>
        <Access>Public</Access>
        <Location left="276" top="94" />
        <Size width="162" height="135" />
        <Collapsed>False</Collapsed>
        <Value>BOTTOM</Value>
        <Value>LEFT</Value>
        <Value>TOP</Value>
        <Value>RIGHT</Value>
      </Entity>
      <Entity type="Interface">
        <Name>ICellsFactory</Name>
        <Access>Public</Access>
        <Location left="636" top="62" />
        <Size width="476" height="93" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Cell [] CreateViewCells(object [] cells, Size gamePanelSize, string currency)</Member>
      </Entity>
      <Entity type="Class">
        <Name>DefaultCellsFactory</Name>
        <Access>Public</Access>
        <Location left="585" top="277" />
        <Size width="539" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int _rectCellWidth</Member>
        <Member type="Field">private int _rectCellHeight</Member>
        <Member type="Field">private Size _cellSize</Member>
        <Member type="Field">private readonly Point _location</Member>
        <Member type="Field">private readonly int _gamePanelLength</Member>
        <Member type="Field">private readonly int _cellNum</Member>
        <Member type="Field">private static int _numCorners</Member>
        <Member type="Field">private static decimal _cellRatio</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private Position _side</Member>
        <Member type="Method">public Cell [] CreateViewCells(object [] cells, Size gamePanelSize, string currency)</Member>
        <Member type="Method">protected void CreateViewCell(Casella cell)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Cell</Name>
        <Access>Public</Access>
        <Location left="48" top="291" />
        <Size width="502" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static decimal _ratio</Member>
        <Member type="Field">protected readonly string _currency</Member>
        <Member type="Constructor">protected Cell(Size size, Point location, int id, string currency)</Member>
        <Member type="Method">public void DrawMarker(PictureBox marker)</Member>
        <Member type="Method">protected abstract void DesignDefaultCell()</Member>
        <Member type="Method">protected abstract void Design90RotatedCell()</Member>
        <Member type="Method">protected abstract void Design180RotatedCell()</Member>
        <Member type="Method">protected abstract void Design270RotatedCell()</Member>
        <Member type="Method">public abstract void Resize(int width, int height)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Cell Factory</Text>
        <Location left="67" top="81" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="2" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>740</X>
          <Y>229</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>546</X>
          <Y>193</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Nesting" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="3">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>858</X>
          <Y>593</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="2" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Controller-DeedFactory</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IDeedFactory</Name>
        <Access>Public</Access>
        <Location left="109" top="44" />
        <Size width="307" height="98" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Deed [] CreateDeeds(object [] properties)</Member>
      </Entity>
      <Entity type="Class">
        <Name>DefaultDeedFactory</Name>
        <Access>Public</Access>
        <Location left="76" top="236" />
        <Size width="375" height="166" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string _currency</Member>
        <Member type="Constructor">public DefaultDeedFactory(string currency)</Member>
        <Member type="Method">protected virtual Deed CreateDeed(Casella cell)</Member>
        <Member type="Method">public virtual Deed [] CreateDeeds(object [] properties)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Deed</Name>
        <Access>Public</Access>
        <Location left="547" top="159" />
        <Size width="638" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static Font _valueFont</Member>
        <Member type="Field">protected string _name</Member>
        <Member type="Field">protected readonly int _id</Member>
        <Member type="Field">protected decimal _value</Member>
        <Member type="Field">protected decimal _sellValue</Member>
        <Member type="Field">protected string _currencySymbol</Member>
        <Member type="Field">protected decimal [] _rentValues</Member>
        <Member type="Field">string _group</Member>
        <Member type="Constructor">protected Deed(int id, string name, decimal value, decimal sellValue, decimal [] rentValues, string currency, string group)</Member>
        <Member type="Property">public int ID { get; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Deed Factory</Text>
        <Location left="776" top="44" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="1" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Controller-GameController</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Controller</Name>
        <Access>Public</Access>
        <Location left="60" top="295" />
        <Size width="489" height="330" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private MainView _mainView</Member>
        <Member type="Field">private ICellsFactory _cellsFactory</Member>
        <Member type="Field">private IConfigLoader _builder</Member>
        <Member type="Field">private IDeedFactory _deedFactory</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private GameController _gameController</Member>
        <Member type="Constructor">public Controller(MainView mainView)</Member>
        <Member type="Method">public void NewGame_ButtonClicked()</Member>
        <Member type="Method">public void EndGame_ButtonClicked()</Member>
        <Member type="Method">private void CreateGame(string[] names, string[] markers, TimeSpan gameTime)</Member>
        <Member type="Method">private Giocatore [] CreatePlayers(string[] names, string[] markers, Casella startCell)</Member>
        <Member type="Method">private void ViewGame(Partita partita, TavolaDaGioco gameBoard, TimeSpan gameTime)</Member>
        <Member type="Method">private void CreateViewCells(IGameBoard boardPanel, TavolaDaGioco gameBoard)</Member>
        <Member type="Method">private void DisplayInitialDeeds(Deed [] deedPool, Partita partita)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameController</Name>
        <Access>Public</Access>
        <Location left="722" top="99" />
        <Size width="431" height="536" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static BuildingDialog _buildingDialog</Member>
        <Member type="Field">private static CardInstructionDialog _cardInstructionDialog</Member>
        <Member type="Field">private static SellPropertyDialog _sellPropertyDialog</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Constructor">public GameController(string currency)</Member>
        <Member type="Method">public void SetGame(Partita partita, ControlPanel controlPanel)</Member>
        <Member type="Method">public void DemolisciEdificioClicked()</Member>
        <Member type="Method">public void VendiTerrenoClicked()</Member>
        <Member type="Method">public void AcquistaUnTerrenoClicked()</Member>
        <Member type="Method">public void PescaUnaCartaClicked()</Member>
        <Member type="Method">public void CostruisciEdificioClicked()</Member>
        <Member type="Method">public void PagaCauzioneClicked()</Member>
        <Member type="Method">public void TerminaTurnoClicked()</Member>
        <Member type="Method">public void TiraDadiClicked()</Member>
        <Member type="Method">public void PagaTassaClicked()</Member>
        <Member type="Method">public void PagaAffittoClicked()</Member>
        <Member type="Method">public void PagaClicked()</Member>
        <Member type="Method">public void RitiraDallaPartitaClicked()</Member>
        <Member type="Method">public void TerminaPartita()</Member>
        <Member type="Method">public void SpostaInPrigione()</Member>
        <Member type="Method">public void SpostaGiocatore()</Member>
        <Member type="Method">private void SettaParametriGiocatore(int spostamento, bool passaDalVia)</Member>
        <Member type="Method">private void SettaParametriGiocatore(string destinazione, bool passaDalVia)</Member>
        <Member type="Method">private void GiocaUnAltroTurno()</Member>
        <Member type="Method">private bool TentaPaga(decimal importo)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>GameController</Text>
        <Location left="168" top="99" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>594</X>
          <Y>474</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>679</X>
          <Y>474</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_gameController</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>0..1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>GameController</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>CardInstructionDialog</Name>
        <Access>Public</Access>
        <Location left="687" top="688" />
        <Size width="470" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label _cardLabel</Member>
        <Member type="Field">private Label _instructionLabel</Member>
        <Member type="Field">private Panel _cardPanel</Member>
        <Member type="Field">private Button _okButton</Member>
        <Member type="Constructor">public CardInstructionDialog()</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(string card, string instructions, Color color)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SellPropertyDialog</Name>
        <Access>Public</Access>
        <Location left="1185" top="535" />
        <Size width="495" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _playerNameLabel</Member>
        <Member type="Field">private Label _currentStatusLabel</Member>
        <Member type="Field">private Label _propertyValueLabel</Member>
        <Member type="Field">private Label _questionLabel</Member>
        <Member type="Field">private Button _returnButton</Member>
        <Member type="Field">private Button _okButton</Member>
        <Member type="Field">private Terreno _toSell</Member>
        <Member type="Field">private List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Constructor">public SellPropertyDialog(string currency)</Member>
        <Member type="Property">public Terreno ToSell { get; }</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(List&lt;Model.Terreno&gt; terreni, string playerName)</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BuildingDialog</Name>
        <Access>Public</Access>
        <Location left="45" top="520" />
        <Size width="620" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private IContainer component</Member>
        <Member type="Field">private ListBox _propertyList</Member>
        <Member type="Field">private Label _infoLabel</Member>
        <Member type="Field">private Label _playerNameLabel</Member>
        <Member type="Field">private Button _returnButton</Member>
        <Member type="Field">private Button _okButton</Member>
        <Member type="Field">private Label _currentStatusLabel</Member>
        <Member type="Field">private Label _buildingValueLabel</Member>
        <Member type="Field">private Label _questionLabelLabel</Member>
        <Member type="Field">private List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">private TerrenoNormale _toModify</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private Action _action</Member>
        <Member type="Constructor">public BuildingDialog(string currency)</Member>
        <Member type="Property">public TerrenoNormale ToModify { get; }</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(List&lt;Model.TerrenoNormale&gt; terreni, Action action, string playerName)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void SelectedProperty_Changed(object sender, EventArgs e)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameController</Name>
        <Access>Public</Access>
        <Location left="717" top="39" />
        <Size width="412" height="536" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static BuildingDialog _buildingDialog</Member>
        <Member type="Field">private static CardInstructionDialog _cardInstructionDialog</Member>
        <Member type="Field">private static SellPropertyDialog _sellPropertyDialog</Member>
        <Member type="Field">private string _currency</Member>
        <Member type="Field">private ControlPanel _controlPanel</Member>
        <Member type="Constructor">public GameController(string currency)</Member>
        <Member type="Method">public void SetGame(Partita partita, ControlPanel controlPanel)</Member>
        <Member type="Method">public void DemolisciEdificioClicked()</Member>
        <Member type="Method">public void VendiTerrenoClicked()</Member>
        <Member type="Method">public void AcquistaUnTerrenoClicked()</Member>
        <Member type="Method">public void PescaUnaCartaClicked()</Member>
        <Member type="Method">public void CostruisciEdificioClicked()</Member>
        <Member type="Method">public void PagaCauzioneClicked()</Member>
        <Member type="Method">public void TerminaTurnoClicked()</Member>
        <Member type="Method">public void TiraDadiClicked()</Member>
        <Member type="Method">public void PagaTassaClicked()</Member>
        <Member type="Method">public void PagaAffittoClicked()</Member>
        <Member type="Method">public void PagaClicked()</Member>
        <Member type="Method">public void RitiraDallaPartitaClicked()</Member>
        <Member type="Method">public void TerminaPartita()</Member>
        <Member type="Method">public void SpostaInPrigione()</Member>
        <Member type="Method">public void SpostaGiocatore()</Member>
        <Member type="Method">private void SettaParametriGiocatore(int spostamento, bool passaDalVia)</Member>
        <Member type="Method">private void SettaParametriGiocatore(string destinazione, bool passaDalVia)</Member>
        <Member type="Method">private void GiocaUnAltroTurno()</Member>
        <Member type="Method">private bool TentaPaga(decimal importo)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Partita</Name>
        <Access>Public</Access>
        <Location left="1240" top="184" />
        <Size width="327" height="587" />
        <Collapsed>True</Collapsed>
        <Member type="Field">readonly Giocatore[] _giocatori</Member>
        <Member type="Field">readonly TavolaDaGioco _tavolaDaGioco</Member>
        <Member type="Field">int _giocatoreCorrente</Member>
        <Member type="Field">Random _random</Member>
        <Member type="Field">int _risultatoDado1</Member>
        <Member type="Field">int _risultatoDado2</Member>
        <Member type="Field">int _nDoppi</Member>
        <Member type="Field">Carta _cartaCorrente</Member>
        <Member type="Field">TimeSpan _tempoDaGiocare</Member>
        <Member type="Field">Timer _timerPartita</Member>
        <Member type="Event">public event PlayerChangedHandler PlayerChanged</Member>
        <Member type="Event">public event GameEndedHandler GameEnded</Member>
        <Member type="Event">public event GameTimeHandler GameTimer</Member>
        <Member type="Constructor">public Partita(Giocatore[] giocatori, TavolaDaGioco tavolaDaGioco, TimeSpan tempoDaGiocare)</Member>
        <Member type="Property">public Giocatore[] Giocatori { get; }</Member>
        <Member type="Property">public TavolaDaGioco TavolaDaGioco { get; }</Member>
        <Member type="Property">public int RisultatoDado1 { get; set; }</Member>
        <Member type="Property">public int RisultatoDado2 { get; set; }</Member>
        <Member type="Property">public int NDoppi { get; set; }</Member>
        <Member type="Property">public int GiocatoreCorrente { get; set; }</Member>
        <Member type="Property">public Carta CartaCorrente { get; set; }</Member>
        <Member type="Property">public TimeSpan TempoDaGiocare { get; }</Member>
        <Member type="Method">public Giocatore GetGiocatoreCorrente()</Member>
        <Member type="Method">public bool TiraDadi()</Member>
        <Member type="Method">public void PassaTurnoProssimoGiocatoreAttivo()</Member>
        <Member type="Method">public void AggiornaAffittoTerreniGiocatore()</Member>
        <Member type="Method">public void AvviaTimer()</Member>
        <Member type="Method">public void ArrestaTimer()</Member>
        <Member type="Method">public List&lt;Statistica&gt; CalcolaStatisctiche()</Member>
        <Member type="Method">public void OnTimerChanged(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ControlPanel</Name>
        <Access>Public</Access>
        <Location left="1240" top="298" />
        <Size width="327" height="1114" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Button _ritiraDallaPartitaButton</Member>
        <Member type="Field">private Button _pagaCauzioneButton</Member>
        <Member type="Field">private Button _costruisciEdificioButton</Member>
        <Member type="Field">private Button _demolisciEdificioButton</Member>
        <Member type="Field">private Button _vendiTerrenoButton</Member>
        <Member type="Field">private Button _acquistaTerrenoButton</Member>
        <Member type="Field">private Button _pescaUnaCartaButton</Member>
        <Member type="Field">private Button _tiraDadiButton</Member>
        <Member type="Field">private Button _terminaTurnoButton</Member>
        <Member type="Field">private Button _pagaTassaButton</Member>
        <Member type="Field">private Button _pagaAffittoButton</Member>
        <Member type="Field">private Button _pagaButton</Member>
        <Member type="Field">private Button _visualizzaContrattoButton</Member>
        <Member type="Field">private Button _visualizzaInformazioniButton</Member>
        <Member type="Field">private List&lt;Button&gt; _buttons</Member>
        <Member type="Field">private GameController _controller</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private Deed [] _deedPool</Member>
        <Member type="Field">private static DeedInfoDialog _deedInfoDialog</Member>
        <Member type="Field">private static PropertyInfoDialog _propertyInfoDialog</Member>
        <Member type="Constructor">public ControlPanel(Point location, Size size, string name, GameController controller, Partita partita, Deed [] deedPool, string currency)</Member>
        <Member type="Constructor">public ControlPanel(IContainer container)</Member>
        <Member type="Property">public Button TiraDadiButton { get; }</Member>
        <Member type="Property">public Button PagaButton { get; }</Member>
        <Member type="Property">public Button PagaAffittoButton { get; }</Member>
        <Member type="Property">public Button PagaTassaButton { get; }</Member>
        <Member type="Property">public Button PagaCauzioneButton { get; }</Member>
        <Member type="Property">public Button PescaUnaCartaButton { get; }</Member>
        <Member type="Property">public Button TerminaTurnoButton { get; }</Member>
        <Member type="Property">public Button AcquistaTerrenoButton { get; }</Member>
        <Member type="Property">public Button VendiTerrenoButton { get; }</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void RegistraEventiCaselle()</Member>
        <Member type="Method">private void RegistraEventiCarta(Carta carta)</Member>
        <Member type="Method">public void OnDispose()</Member>
        <Member type="Method">private void VisualizzaInformazioniButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void RitiraDallaPartitaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaCauzioneButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void CostruisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void DemolisciEdificioButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TiraDadiButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void TerminaTurnoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PescaUnaCartaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void AcquistaUnTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void VendiTerrenoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaTassaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaAffittoButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void PagaButtonClick(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTassa(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaVaiInPrigione(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaTerreno(object sender, EventArgs e)</Member>
        <Member type="Method">private void SuCasellaCarta(object sender, EventArgs e)</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaRiceviPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPagaPescaPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviAvantiPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaMuoviIndietroPescata(object sender, EventArgs e)</Member>
        <Member type="Method">private void CartaPrigionePescata(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>WarningMessageBox</Name>
        <Access>Public</Access>
        <Location left="56" top="39" />
        <Size width="565" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private static WarningMessageBox _warningMessageBox</Member>
        <Member type="Field">private Label _messageLabel</Member>
        <Member type="Field">private Button _yesButton</Member>
        <Member type="Field">private Button _noButton</Member>
        <Member type="Field">private Button _okButton</Member>
        <Member type="Constructor">private WarningMessageBox()</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">public static WarningMessageBox GetMessageBoxInstance()</Member>
        <Member type="Method">public DialogResult ShowDialogWithData(string message, string question, MessageBoxButtons buttons)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>GameController - Funzionamento</Text>
        <Location left="1326" top="39" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Enum">
        <Name>Action</Name>
        <Access>Public</Access>
        <Location left="219" top="312" />
        <Size width="162" height="98" />
        <Collapsed>False</Collapsed>
        <Value>BUILD</Value>
        <Value>DEMOLISH</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>931</X>
          <Y>613</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_cardInstructionDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1441</X>
          <Y>423</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_sellPropertyDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>692</X>
          <Y>421</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>466</X>
          <Y>450</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndRole>_buildingDialog</EndRole>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="3" second="6">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="3" second="5">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="4">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Nesting" first="2" second="8">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="3" second="8">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Carta-Delegate</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Carta</Name>
        <Access>Public</Access>
        <Location left="76" top="63" />
        <Size width="296" height="233" />
        <Collapsed>False</Collapsed>
        <Member type="Field">TipoCarta _tipo</Member>
        <Member type="Field">string _istruzioni</Member>
        <Member type="Field">Color _colore</Member>
        <Member type="Constructor">public Carta(TipoCarta tipo, string istruzioni)</Member>
        <Member type="Property">public TipoCarta Tipo { get; }</Member>
        <Member type="Property">public string Istruzioni { get; }</Member>
        <Member type="Property">public Color Colore { get; }</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CartaPaga</Name>
        <Access>Internal</Access>
        <Location left="76" top="366" />
        <Size width="596" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly decimal _importo</Member>
        <Member type="Event">public event EventHandler CartaPagaEvent</Member>
        <Member type="Constructor">public CartaPaga(TipoCarta tipo, string istruzioni, decimal importo)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Carta - Delegate</Text>
        <Location left="503" top="254" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Giocatore-Delegate</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>LogEventArgs</Name>
        <Access>Public</Access>
        <Location left="176" top="451" />
        <Size width="224" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _logMessage</Member>
        <Member type="Field">private readonly decimal _value</Member>
        <Member type="Constructor">public LogEventArgs(string logMessage)</Member>
        <Member type="Property">public string LogMessage { get; }</Member>
        <Member type="Property">public decimal Value { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Giocatore</Name>
        <Access>Public</Access>
        <Location left="813" top="27" />
        <Size width="346" height="604" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _nome</Member>
        <Member type="Field">private decimal _capitale</Member>
        <Member type="Field">private readonly string _segnalino</Member>
        <Member type="Field">bool _inPrigione</Member>
        <Member type="Field">bool _attivo</Member>
        <Member type="Field">Casella _posizioneCorrente</Member>
        <Member type="Field">List&lt;Terreno&gt; _terreni</Member>
        <Member type="Field">Dictionary&lt;string, int&gt; _terreniPerGruppo</Member>
        <Member type="Field">int _turniInPrigione</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PositionChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; MoneyChanged</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; PlayerQuit</Member>
        <Member type="Constructor">public Giocatore(string nome, int capitale, string segnalino, Casella posizioneIniziale)</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public decimal Capitale { get; }</Member>
        <Member type="Property">public string Segnalino { get; }</Member>
        <Member type="Property">public bool InPrigione { get; set; }</Member>
        <Member type="Property">public bool Attivo { get; set; }</Member>
        <Member type="Property">public Casella PosizioneCorrente { get; set; }</Member>
        <Member type="Property">public List&lt;Terreno&gt; Terreni { get; }</Member>
        <Member type="Property">public int TurniInPrigione { get; set; }</Member>
        <Member type="Property">public Dictionary&lt;string, int&gt; TerreniPerGruppo { get; }</Member>
        <Member type="Method">public virtual void IncrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void DecrementaCapitale(decimal importo)</Member>
        <Member type="Method">public virtual void AcquistaTerreno(Terreno terreno)</Member>
        <Member type="Method">public virtual void VendiTerreno(Terreno terreno)</Member>
        <Member type="Method">public bool HaTerreniEdificabili()</Member>
        <Member type="Method">public void Fallisci()</Member>
        <Member type="Method">private void OnPositionChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnMoneyChanged(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void OnPlayerQuit(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Giocatore - LogEventArgs
View registrate</Text>
        <Location left="368" top="60" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Interface">
        <Name>IGameBoard</Name>
        <Access>Public</Access>
        <Location left="176" top="221" />
        <Size width="210" height="231" />
        <Collapsed>True</Collapsed>
        <Member type="Property">Point BoardLocation { get; }</Member>
        <Member type="Property">Size BoardSize { get; }</Member>
        <Member type="Property">Control [] Cells { get; }</Member>
        <Member type="Property">Control [] Markers { get; }</Member>
        <Member type="Method">void AddCell(int index, Control cell)</Member>
        <Member type="Method">void RemoveCell(int index, Control cell)</Member>
        <Member type="Method">void PutMarkers(Control marker)</Member>
        <Member type="Method">void PutMarkersOnStartCell(object [] players)</Member>
        <Member type="Method">void RemoveMarker(Control marker)</Member>
        <Member type="Method">void DisposeGameBoard()</Member>
      </Entity>
      <Entity type="Class">
        <Name>GameInfoPanel</Name>
        <Access>Public</Access>
        <Location left="475" top="221" />
        <Size width="200" height="434" />
        <Collapsed>True</Collapsed>
        <Member type="Field">private IContainer components</Member>
        <Member type="Field">private Label _labelGiocatore</Member>
        <Member type="Field">private Label _labelCapitale</Member>
        <Member type="Field">private Label _labelPosizione</Member>
        <Member type="Field">private Label _labelInPrigione</Member>
        <Member type="Field">private Label _labelTempo</Member>
        <Member type="Field">private TextBox _logBox</Member>
        <Member type="Field">private Partita _partita</Member>
        <Member type="Field">private static string _giocatoreCorrente</Member>
        <Member type="Field">private static string _capitaleGiocatoreCorrente</Member>
        <Member type="Field">private static string _posizioneGiocatoreCorrente</Member>
        <Member type="Field">private static int _maxLogLines</Member>
        <Member type="Field">private readonly string _currency</Member>
        <Member type="Constructor">public GameInfoPanel(Point location, Size size, Partita partita, string currency)</Member>
        <Member type="Constructor">public GameInfoPanel(IContainer container)</Member>
        <Member type="Method">protected override void Dispose(bool disposing)</Member>
        <Member type="Method">private void InitializeComponent()</Member>
        <Member type="Method">private void CambioGiocatore(object sender, EventArgs e)</Member>
        <Member type="Method">private void AggiornaDatiGiocatoreCorrente(object sender, LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaLog(LogEventArgs e)</Member>
        <Member type="Method">private void AggiornaTimer(object sender, EventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="4" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>324</X>
          <Y>423</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Casella-Delegate</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Casella</Name>
        <Access>Public</Access>
        <Location left="130" top="97" />
        <Size width="284" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly int _id</Member>
        <Member type="Field">readonly string _nome</Member>
        <Member type="Field">readonly string _tipoCella</Member>
        <Member type="Constructor">protected Casella(int id, string nome)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Nome { get; }</Member>
        <Member type="Property">public string TipoCella { get; }</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Tassa</Name>
        <Access>Public</Access>
        <Location left="506" top="97" />
        <Size width="443" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Field">decimal _importo</Member>
        <Member type="Field">private readonly System.Drawing.Image _image</Member>
        <Member type="Event">public event EventHandler TassaEvent</Member>
        <Member type="Constructor">public Tassa(int id, string nome, string tipoCella, decimal importo, Image image)</Member>
        <Member type="Property">public decimal Importo { get; }</Member>
        <Member type="Property">public System.Drawing.Image Image { get; }</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Casella - Delegate</Text>
        <Location left="641" top="390" />
        <Size width="160" height="75" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>TerrenoNormale-Delegate</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>TerrenoNormale</Name>
        <Access>Public</Access>
        <Location left="445" top="518" />
        <Size width="395" height="366" />
        <Collapsed>False</Collapsed>
        <Member type="Field">static int _maxEdifici</Member>
        <Member type="Field">readonly decimal _prezzoCostruzioneEdificio</Member>
        <Member type="Field">int _numeroEdifici</Member>
        <Member type="Event">public event EventHandler&lt;LogEventArgs&gt; BuildingChanged</Member>
        <Member type="Constructor">public TerrenoNormale(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo, decimal prezzoCostruzioneEdificio)</Member>
        <Member type="Property">public decimal PrezzoCostruzioneEdificio { get; }</Member>
        <Member type="Property">public int NumeroEdifici { get; }</Member>
        <Member type="Property">public int MaxEdifici { get; }</Member>
        <Member type="Method">public virtual void CostruisciEdificio()</Member>
        <Member type="Method">public virtual void DemolisciEdificio()</Member>
        <Member type="Method">public virtual bool IsEdificabile(int terreniDelGruppo)</Member>
        <Member type="Method">public override void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public override bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public void ResetEdifici()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public void OnBuildingChanged(object sender, LogEventArgs e)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Terreno</Name>
        <Access>Public</Access>
        <Location left="139" top="30" />
        <Size width="509" height="401" />
        <Collapsed>False</Collapsed>
        <Member type="Field">readonly decimal[] _valoriDiAffitto</Member>
        <Member type="Field">readonly decimal _valore</Member>
        <Member type="Field">readonly decimal _valoreDiVendita</Member>
        <Member type="Field">decimal _affitto</Member>
        <Member type="Field">Giocatore _proprietario</Member>
        <Member type="Field">readonly string _nomeGruppo</Member>
        <Member type="Event">public event EventHandler TerrenoEvent</Member>
        <Member type="Constructor">protected Terreno(int id, string nome, string tipoCella, decimal valore, decimal valoreDiVendita, decimal [] valoriDiAffito, string nomeGruppo)</Member>
        <Member type="Property">public decimal [] ValoriDiAffitto { get; }</Member>
        <Member type="Property">public decimal Valore { get; }</Member>
        <Member type="Property">public decimal ValoreDiVendita { get; }</Member>
        <Member type="Property">public decimal Affitto { get; set; }</Member>
        <Member type="Property">public Giocatore Proprietario { get; set; }</Member>
        <Member type="Property">public string NomeGruppo { get; }</Member>
        <Member type="Method">public abstract bool IsVendibile(int terreniDelGruppo, List&lt;Terreno&gt; terreniDelGruppoPosseduti)</Member>
        <Member type="Method">public abstract void AggiornaAffitto(int terreniDelGruppo)</Member>
        <Member type="Method">public abstract override IEnumerable&lt;object&gt; GetParametriCella()</Member>
        <Member type="Method">public abstract IEnumerable&lt;object&gt; GetContratto()</Member>
        <Member type="Method">public override void EseguiOperazione(Giocatore giocatore)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>TerrenoNormale - Delegate</Text>
        <Location left="154" top="518" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>LogEventArgs</Name>
        <Access>Public</Access>
        <Location left="139" top="675" />
        <Size width="224" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly string _logMessage</Member>
        <Member type="Field">private readonly decimal _value</Member>
        <Member type="Constructor">public LogEventArgs(string logMessage)</Member>
        <Member type="Property">public string LogMessage { get; }</Member>
        <Member type="Property">public decimal Value { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="0" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>679</X>
          <Y>493</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>403</X>
          <Y>456</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="0" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>